Compiling Program: F:\GitHub\vdfd-framework-community\AppSrc\CE.src
Memory Available: 1577005056
1>Use VDFD_CE.pkg
Using pre-compiled package VDFD_CE.PKG
Including file: VDFD_CE.pkd    (F:\GitHub\vdfd-framework-community\AppSrc\VDFD_CE.pkd)
94782>Use cCJStandardCommandBarSystem.pkg
Including file: cCJStandardCommandBarSystem.pkg    (C:\Program Files\Visual DataFlex 17.1\Pkg\cCJStandardCommandBarSystem.pkg)
94782>>>// these are all the packages used in a standard MDI menubar/toolbar system
94782>>>
94782>>>Use cCJCommandBarSystem.pkg
94782>>>Use cCJStandardMenuItemClasses.pkg
Including file: cCJStandardMenuItemClasses.pkg    (C:\Program Files\Visual DataFlex 17.1\Pkg\cCJStandardMenuItemClasses.pkg)
94782>>>>>Use Dfpanel.pkg
94782>>>>>Use cCJCommandBarSystem.pkg
94782>>>>>Use LanguageText.pkg
94782>>>>>
94782>>>>>
94782>>>>>Class cCJUndoMenuItem is a cCJMenuItem
94783>>>>>    
94783>>>>>    Procedure Construct_Object
94785>>>>>        Forward Send Construct_Object
94787>>>>>        Set psCaption   to C_$CaptionUndo
94788>>>>>        Set psToolTip to C_$ToolTipUndo
94789>>>>>        Set psDescription to C_$DescUndo
94790>>>>>        Set psImage to "ActionUndo.ico"
94791>>>>>        Set pbActiveUpdate to True
94792>>>>>        Set psCategory to C_$CategoryEdit
94793>>>>>        Set psShortcut to C_$Key_Ctrl_Z
94794>>>>>    End_Procedure
94795>>>>>
94795>>>>>    Procedure OnExecute Variant vCommandBarControl
94797>>>>>        Send Undo of (focus(Self))
94798>>>>>    End_Procedure
94799>>>>>    
94799>>>>>    Function IsEnabled Returns Boolean
94801>>>>>        Boolean bEnabled
94801>>>>>        Get CanUndo of (Focus(Self)) to bEnabled
94802>>>>>        Function_Return bEnabled
94803>>>>>    End_Function
94804>>>>>         
94804>>>>>End_Class
94805>>>>>
94805>>>>>
94805>>>>>Class cCJDeleteEditMenuItem is a cCJMenuItem
94806>>>>>    
94806>>>>>    Procedure Construct_Object
94808>>>>>        Forward Send Construct_Object
94810>>>>>        Set psCaption   to C_$CaptionDelete
94811>>>>>        Set psToolTip to C_$ToolTipDelete
94812>>>>>        Set psDescription to C_$DescDelete
94813>>>>>        Set psImage to "actionDelete.ico"
94814>>>>>        Set psShortcut to C_$Key_Delete
94815>>>>>        Set pbActiveUpdate to True
94816>>>>>        Set psCategory to C_$CategoryEdit
94817>>>>>    End_Procedure
94818>>>>>
94818>>>>>
94818>>>>>    Procedure OnExecute Variant vCommandBarControl
94820>>>>>        Send Delete of (focus(Self))
94821>>>>>    End_Procedure
94822>>>>>    
94822>>>>>    Function IsEnabled Returns Boolean
94824>>>>>        Boolean bEnabled
94824>>>>>        Get CanDelete of (Focus(Self)) to bEnabled
94825>>>>>        Function_Return bEnabled
94826>>>>>    End_Function
94827>>>>>         
94827>>>>>End_Class
94828>>>>>
94828>>>>>
94828>>>>>Class cCJCutMenuItem is a cCJMenuItem
94829>>>>>    
94829>>>>>    Procedure Construct_Object
94831>>>>>        Forward Send Construct_Object
94833>>>>>        Set psCaption   to C_$CaptionCut
94834>>>>>        Set psToolTip to C_$TooltipCut
94835>>>>>        Set psDescription to C_$DescCut
94836>>>>>        Set psImage to "actionCut.ico"
94837>>>>>        Set psShortcut to C_$Key_Ctrl_X
94838>>>>>        Set pbActiveUpdate to True
94839>>>>>        Set psCategory to C_$CategoryEdit
94840>>>>>    End_Procedure
94841>>>>>
94841>>>>>
94841>>>>>    Procedure OnExecute Variant vCommandBarControl
94843>>>>>        Send Cut of (focus(Self))
94844>>>>>    End_Procedure
94845>>>>>    
94845>>>>>    Function IsEnabled Returns Boolean
94847>>>>>        Boolean bEnabled
94847>>>>>        Get CanCut of (Focus(Self)) to bEnabled
94848>>>>>        Function_Return bEnabled
94849>>>>>    End_Function
94850>>>>>         
94850>>>>>End_Class
94851>>>>>
94851>>>>>
94851>>>>>Class cCJCopyMenuItem is a cCJMenuItem
94852>>>>>    
94852>>>>>    Procedure Construct_Object
94854>>>>>        Forward Send Construct_Object
94856>>>>>        Set psCaption   to C_$CaptionCopy
94857>>>>>        Set psToolTip to C_$ToolTipCopy
94858>>>>>        Set psDescription to C_$DescCopy
94859>>>>>        Set psImage to "actionCopy.ico"
94860>>>>>        Set psShortcut to C_$Key_Ctrl_C
94861>>>>>        Set pbActiveUpdate to True
94862>>>>>        Set psCategory to C_$CategoryEdit
94863>>>>>    End_Procedure
94864>>>>>
94864>>>>>
94864>>>>>    Procedure OnExecute Variant vCommandBarControl
94866>>>>>        Send Copy of (focus(Self))
94867>>>>>    End_Procedure
94868>>>>>    
94868>>>>>    Function IsEnabled Returns Boolean
94870>>>>>        Boolean bEnabled
94870>>>>>        Get CanCopy of (Focus(Self)) to bEnabled
94871>>>>>        Function_Return bEnabled
94872>>>>>    End_Function
94873>>>>>         
94873>>>>>End_Class
94874>>>>>
94874>>>>>
94874>>>>>Class cCJPasteMenuItem is a cCJMenuItem
94875>>>>>    
94875>>>>>    Procedure Construct_Object
94877>>>>>        Forward Send Construct_Object
94879>>>>>        Set psCaption   to C_$CaptionPaste
94880>>>>>        Set psToolTip to C_$ToolTipPaste
94881>>>>>        Set psDescription to C_$DescPaste
94882>>>>>        Set psImage to "actionPaste.ico"
94883>>>>>        Set pbActiveUpdate to True
94884>>>>>        Set psShortcut to C_$Key_Ctrl_V
94885>>>>>        Set psCategory to C_$CategoryEdit
94886>>>>>    End_Procedure
94887>>>>>
94887>>>>>
94887>>>>>    Procedure OnExecute Variant vCommandBarControl
94889>>>>>        Send Paste of (focus(Self))
94890>>>>>    End_Procedure
94891>>>>>    
94891>>>>>    Function IsEnabled Returns Boolean
94893>>>>>        Boolean bEnabled
94893>>>>>        Get CanPaste of (Focus(Self)) to bEnabled
94894>>>>>        Function_Return bEnabled
94895>>>>>    End_Function
94896>>>>>         
94896>>>>>End_Class
94897>>>>>
94897>>>>>Class cCJSelectAllMenuItem is a cCJMenuItem
94898>>>>>    
94898>>>>>    Procedure Construct_Object
94900>>>>>        Forward Send Construct_Object
94902>>>>>        Set psCaption   to C_$CaptionSelectAll
94903>>>>>        Set psToolTip to C_$ToolTipSelectAll
94904>>>>>        Set psDescription to C_$DescSelectAll
94905>>>>>        Set pbActiveUpdate to True
94906>>>>>        Set psShortcut to C_$Key_Ctrl_A
94907>>>>>        Set psCategory to C_$CategoryEdit
94908>>>>>    End_Procedure
94909>>>>>
94909>>>>>
94909>>>>>    Procedure OnExecute Variant vCommandBarControl
94911>>>>>        Send Select_All of (focus(Self))
94912>>>>>    End_Procedure
94913>>>>>    
94913>>>>>    Function IsEnabled Returns Boolean
94915>>>>>        Boolean bEnabled
94915>>>>>        Get CanSelect of (Focus(Self)) to bEnabled
94916>>>>>        Function_Return bEnabled
94917>>>>>    End_Function
94918>>>>>         
94918>>>>>End_Class
94919>>>>>
94919>>>>> 
94919>>>>>Class cCJExitMenuItem is a cCJMenuItem
94920>>>>>
94920>>>>>    Procedure Construct_Object
94922>>>>>        Forward Send Construct_Object
94924>>>>>        Set psCaption to C_$CaptionExit
94925>>>>>        Set psToolTip to C_$ToolTipExit
94926>>>>>        Set psDescription to C_$ToolTipExit
94927>>>>>        Set psShortcut to C_$Key_Alt_F4
94928>>>>>        Set psCategory to C_$CategoryFile
94929>>>>>    End_Procedure
94930>>>>>
94930>>>>>    Procedure OnExecute Variant vCommandBarControl
94932>>>>>        Send Exit_Application of Desktop
94933>>>>>    End_Procedure
94934>>>>>
94934>>>>>End_Class           
94935>>>>>
94935>>>>>Class cCJHelpMenuItem is a cCJMenuItem    
94936>>>>>
94936>>>>>    Procedure Construct_Object
94938>>>>>        Forward Send Construct_Object
94940>>>>>        Set psCaption to C_$CaptionHelp
94941>>>>>        Set psDescription to C_$ToolTipHelp
94942>>>>>        Set psToolTip to C_$DescHelp
94943>>>>>        Set psImage to "ActionHelp.ico"
94944>>>>>        Set psShortcut to "F1"
94945>>>>>        Set psCategory to C_$CategoryHelp
94946>>>>>    End_Procedure
94947>>>>>    
94947>>>>>    Procedure OnExecute Variant vCommandBarControl
94949>>>>>        Send Help of (Focus(Self))
94950>>>>>    End_Procedure
94951>>>>>
94951>>>>>End_Class
94952>>>>>
94952>>>>>Class cCJStatusbarMenuItem is a cCJMenuItem
94953>>>>>
94953>>>>>    Procedure Construct_Object
94955>>>>>        Forward Send Construct_Object
94957>>>>>        Set psCaption to C_$CaptionAddStatusbar
94958>>>>>        Set psToolTip to C_$ToolTipAddStatusbar
94959>>>>>        Set psDescription to  C_$DescAddStatusbar
94960>>>>>        Set psCategory to C_$CategoryWindow
94961>>>>>    End_Procedure
94962>>>>>
94962>>>>>    Procedure OnExecute Variant vCommandBarControl
94964>>>>>        Handle hoCommandBars hoClientArea
94964>>>>>        Get CommandBarSystemObject to hoCommandBars
94965>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
94966>>>>>        If hoClientArea Begin
94968>>>>>            // the clientarea's parent panel has message
94968>>>>>            Send Toggle_StatusBar of (Parent(hoClientArea))
94969>>>>>        End
94969>>>>>>
94969>>>>>    End_Procedure
94970>>>>>
94970>>>>>     Function IsChecked Returns Boolean
94972>>>>>        Boolean bOn
94972>>>>>        Handle hoCommandBars hoClientArea
94972>>>>>        Get CommandBarSystemObject to hoCommandBars
94973>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
94974>>>>>        If hoClientArea Begin
94976>>>>>            // the clientarea's parent panel has message
94976>>>>>            Get StatusBar_State of (Parent(hoClientArea)) to bOn
94977>>>>>        End
94977>>>>>>
94977>>>>>        Function_Return bOn
94978>>>>>     End_Function
94979>>>>>End_Class
94980>>>>>
94980>>>>>Class cCJAutoArrangeIconsMenuItem is a cCJMenuItem
94981>>>>>
94981>>>>>    Procedure Construct_Object
94983>>>>>        Forward Send Construct_Object
94985>>>>>        Set psCaption to C_$CaptionAutoArrangeIcons
94986>>>>>        Set psToolTip to C_$ToolTipAutoArrangeIcons
94987>>>>>        Set psDescription to C_$DescAutoArrangeIcons
94988>>>>>        Set psCategory to C_$CategoryWindow
94989>>>>>    End_Procedure
94990>>>>>
94990>>>>>    Procedure OnExecute Variant vCommandBarControl
94992>>>>>        Handle hoCommandBars hoClientArea
94992>>>>>        Get CommandBarSystemObject to hoCommandBars
94993>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
94994>>>>>        If hoClientArea Begin
94996>>>>>            // the clientarea's parent panel has message
94996>>>>>            Send Toggle_Auto_Arrange_Icons of (Parent(hoClientArea))
94997>>>>>        End
94997>>>>>>
94997>>>>>    End_Procedure
94998>>>>>    
94998>>>>>     Function IsChecked Returns Boolean
95000>>>>>        Boolean bOn
95000>>>>>        Handle hoCommandBars hoClientArea
95000>>>>>        Get CommandBarSystemObject to hoCommandBars
95001>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
95002>>>>>        If hoClientArea Begin
95004>>>>>            // the clientarea's parent panel has message
95004>>>>>            Get Auto_Arrange_Icons_State of (Parent(hoClientArea)) to bOn
95005>>>>>        End
95005>>>>>>
95005>>>>>        Function_Return bOn
95006>>>>>     End_Function
95007>>>>>End_Class
95008>>>>>
95008>>>>>Class cCJRestoreMenusMenuItem is a cCJMenuItem
95009>>>>>
95009>>>>>    Procedure Construct_Object
95011>>>>>        Forward Send Construct_Object
95013>>>>>        Set psCaption to C_$CaptionRestoreMenus
95014>>>>>        Set psToolTip to C_$ToolTipRestoreMenus
95015>>>>>        Set psDescription to C_$DescRestoreMenus
95016>>>>>        Set psCategory to C_$CategoryWindow
95017>>>>>    End_Procedure
95018>>>>>
95018>>>>>    Procedure OnExecute Variant vCommandBarControl
95020>>>>>        Handle hoCommandBars
95020>>>>>        Get CommandBarSystemObject to hoCommandBars
95021>>>>>        Send RestoreLayout of hoCommandBars
95022>>>>>    End_Procedure
95023>>>>>    
95023>>>>>End_Class
95024>>>>>
95024>>>>>Class cCJCascadeMenuItem is a cCJMenuItem
95025>>>>>
95025>>>>>    Procedure Construct_Object
95027>>>>>        Forward Send Construct_Object
95029>>>>>        Set psCaption to C_$CaptionCascade
95030>>>>>        Set psToolTip to C_$ToolTipCascade
95031>>>>>        Set psDescription to  C_$DescCascade
95032>>>>>        Set psImage to "ActionCascade.ico"
95033>>>>>        Set psCategory to C_$CategoryWindow
95034>>>>>    End_Procedure
95035>>>>>    
95035>>>>>    Procedure OnExecute Variant vCommandBarControl
95037>>>>>        Handle hoCommandBars hoClientArea
95037>>>>>        Get CommandBarSystemObject to hoCommandBars
95038>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
95039>>>>>        If hoClientArea Begin
95041>>>>>            Send Cascade_Windows of hoClientArea
95042>>>>>        End
95042>>>>>>
95042>>>>>    End_Procedure
95043>>>>>End_Class
95044>>>>>
95044>>>>>Class cCJTileHorizontally is a cCJMenuItem
95045>>>>>
95045>>>>>    Procedure Construct_Object
95047>>>>>        Forward Send Construct_Object
95049>>>>>        Set psCaption to C_$CaptionTileHorizontally 
95050>>>>>        Set psToolTip to C_$ToolTipTileHorizontally  
95051>>>>>        Set psDescription to  C_$DescTileHorizontally
95052>>>>>        Set psImage to "ActionTileHorizontally.ico"
95053>>>>>        Set psCategory to C_$CategoryWindow
95054>>>>>    End_Procedure
95055>>>>>
95055>>>>>    Procedure OnExecute Variant vCommandBarControl
95057>>>>>        Handle hoCommandBars hoClientArea
95057>>>>>        Get CommandBarSystemObject to hoCommandBars
95058>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
95059>>>>>        If hoClientArea Begin
95061>>>>>            Send Tile_Windows_Horizontal of hoClientArea
95062>>>>>        End
95062>>>>>>
95062>>>>>    End_Procedure
95063>>>>>End_Class
95064>>>>>
95064>>>>>Class cCJTileVertically is a cCJMenuItem
95065>>>>>
95065>>>>>    Procedure Construct_Object
95067>>>>>        Forward Send Construct_Object
95069>>>>>        Set psCaption to C_$CaptionTileVertically  
95070>>>>>        Set psToolTip to C_$ToolTipTileVertically
95071>>>>>        Set psDescription to  C_$DescTileVertically
95072>>>>>        Set psImage to "ActionTileVertically.ico"
95073>>>>>        Set psCategory to C_$CategoryWindow
95074>>>>>    End_Procedure
95075>>>>>
95075>>>>>    Procedure OnExecute Variant vCommandBarControl
95077>>>>>        Handle hoCommandBars hoClientArea
95077>>>>>        Get CommandBarSystemObject to hoCommandBars
95078>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
95079>>>>>        If hoClientArea Begin
95081>>>>>            Send Tile_Windows_Vertical of hoClientArea
95082>>>>>        End
95082>>>>>>
95082>>>>>    End_Procedure
95083>>>>>End_Class
95084>>>>>
95084>>>>>Class cCJMinimizeWindowsMenuItem is a cCJMenuItem
95085>>>>>
95085>>>>>    Procedure Construct_Object
95087>>>>>        Forward Send Construct_Object
95089>>>>>        Set psCaption to C_$CaptionMinimizeWindows 
95090>>>>>        Set psToolTip to C_$ToolTipMinimizeWindows
95091>>>>>        Set psDescription to  C_$DescMinimizeWindows
95092>>>>>        Set psCategory to C_$CategoryWindow
95093>>>>>    End_Procedure
95094>>>>>
95094>>>>>    Procedure OnExecute Variant vCommandBarControl
95096>>>>>        Handle hoCommandBars hoClientArea
95096>>>>>        Get CommandBarSystemObject to hoCommandBars
95097>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
95098>>>>>        If hoClientArea Begin
95100>>>>>            // the clientarea's parent panel has message
95100>>>>>            Send Minimize_all_Windows of (Parent(hoClientArea))
95101>>>>>        End
95101>>>>>>
95101>>>>>    End_Procedure
95102>>>>>End_Class
95103>>>>>
95103>>>>>
95103>>>>>Class cCJRestoreWindowsMenuItem is a cCJMenuItem
95104>>>>>
95104>>>>>    Procedure Construct_Object
95106>>>>>        Forward Send Construct_Object
95108>>>>>        Set psCaption to C_$CaptionRestoreWindows
95109>>>>>        Set psToolTip to C_$ToolTipRestoreWindows
95110>>>>>        Set psDescription to  C_$DescRestoreWindows
95111>>>>>        Set psCategory to C_$CategoryWindow
95112>>>>>    End_Procedure
95113>>>>>
95113>>>>>    Procedure OnExecute Variant vCommandBarControl
95115>>>>>        Handle hoCommandBars hoClientArea
95115>>>>>        Get CommandBarSystemObject to hoCommandBars
95116>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
95117>>>>>        If hoClientArea Begin
95119>>>>>            // the clientarea's parent panel has message
95119>>>>>            Send Restore_all_Windows of (Parent(hoClientArea))
95120>>>>>        End
95120>>>>>>
95120>>>>>    End_Procedure
95121>>>>>End_Class
95122>>>>>
95122>>>>>Class cCJArrangeIconsMenuItem is a cCJMenuItem
95123>>>>>
95123>>>>>    Procedure Construct_Object
95125>>>>>        Forward Send Construct_Object
95127>>>>>        Set psCaption to C_$CaptionArrangeIcons  
95128>>>>>        Set psToolTip to C_$ToolTipArrangeIcons
95129>>>>>        Set psDescription to  C_$DescArrangeIcons
95130>>>>>        Set psCategory to C_$CategoryWindow
95131>>>>>    End_Procedure
95132>>>>>
95132>>>>>    Procedure OnExecute Variant vCommandBarControl
95134>>>>>        Handle hoCommandBars hoClientArea
95134>>>>>        Get CommandBarSystemObject to hoCommandBars
95135>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
95136>>>>>        If hoClientArea Begin
95138>>>>>            Send Arrange_Icons of hoClientArea
95139>>>>>        End
95139>>>>>>
95139>>>>>    End_Procedure
95140>>>>>
95140>>>>>End_Class
95141>>>>>    
95141>>>Use cCJAboutMenuItem.pkg
Including file: cCJAboutMenuItem.pkg    (C:\Program Files\Visual DataFlex 17.1\Pkg\cCJAboutMenuItem.pkg)
95141>>>>>Use cCJCommandBarSystem.pkg
95141>>>>>Use LanguageText.pkg
95141>>>>>
95141>>>>>// It is expected that if you use this class that you provide an about object that is
95141>>>>>// activated via activate_about such as DfAbout.pkg. We don't use this for you automatically
95141>>>>>// because you may wish to create your own custom about package.
95141>>>>>
95141>>>>>Class cCJAboutMenuItem is a cCJMenuItem    
95142>>>>>
95142>>>>>    Procedure Construct_Object
95144>>>>>        Forward Send Construct_Object
95146>>>>>        Set psCaption to C_$CaptionAbout
95147>>>>>        Set psDescription to C_$ToolTipAbout
95148>>>>>        Set psToolTip to C_$DescAbout
95149>>>>>        Set psImage to "ActionAbout.ico"
95150>>>>>        Set psCategory to C_$CategoryHelp
95151>>>>>    End_Procedure
95152>>>>>    
95152>>>>>    Procedure OnExecute Variant vCommandBarControl
95154>>>>>        Handle hoCommandBars hoClientArea
95154>>>>>        Get CommandBarSystemObject to hoCommandBars
95155>>>>>        Get ClientAreaObject of hoCommandBars to hoClientArea
95156>>>>>        If hoClientArea Begin
95158>>>>>            Send Activate_About of hoClientArea
95159>>>>>        End
95159>>>>>>
95159>>>>>    End_Procedure
95160>>>>>
95160>>>>>End_Class
95161>>>>>
95161>>>>>
95161>>>Use cCJDeoMenuItemClasses.pkg
95161>>>Use cCJMDIWindowsMenuItem.pkg
Including file: cCJMDIWindowsMenuItem.pkg    (C:\Program Files\Visual DataFlex 17.1\Pkg\cCJMDIWindowsMenuItem.pkg)
95161>>>>>Use cCJCommandBarSystem.pkg
95161>>>>>
95161>>>>>Register_Function Client_ID Returns Integer
95161>>>>>
95161>>>>>// only used by cCJMDIWIndowsMenuItem
95161>>>>>Class cCJMDIWindowItem is a cCJMenuItem
95162>>>>>
95162>>>>>    Procedure Construct_Object
95164>>>>>        Forward Send Construct_Object
95166>>>>>        Property Handle phWindow 0 // object id of view
95167>>>>>        Set pbControlFlagNoMovable to True
95168>>>>>        Set pbActiveUpdate to True
95169>>>>>    End_Procedure
95170>>>>>    
95170>>>>>    Procedure OnExecute Variant vCommandBarControl
95172>>>>>        Handle hWindow
95172>>>>>        Get phWindow to hWindow
95173>>>>>        Send Activate_View of hWindow
95174>>>>>    End_Procedure
95175>>>>>    
95175>>>>>End_Class                
95176>>>>>
95176>>>>>
95176>>>>>Class cCJMDIWindowsMenuItem is a cCJMenuItem
95177>>>>>    
95177>>>>>    Procedure Construct_Object
95179>>>>>        Forward Send Construct_Object
95181>>>>>        Property Handle[] phArrayOfWindows
95182>>>>>        Set peControlType to xtpControlPopup
95183>>>>>        Set psCategory to C_$CategoryWindow
95184>>>>>    End_Procedure
95185>>>>>    
95185>>>>>     // This adds MDI windows to the existing menu items.
95185>>>>>     // This removes any existing windows menus and always adds a new set to the end
95185>>>>>
95185>>>>>     Procedure OnPopupInit Variant vCommandBarControl Handle hCommandBarControls
95187>>>>>        Handle  hClientArea hView
95187>>>>>        String  sLabel
95187>>>>>        Integer i iWindows
95187>>>>>        Handle[] hArrayOfWindows
95188>>>>>        Variant vItem
95188>>>>>        
95188>>>>>        // delete all windows actions and menu items. Assume we have an array of DF action objects for the windows
95188>>>>>        // also assume that destroying an action removes all menu instances of that action
95188>>>>>        Get phArrayOfWindows to hArrayOfWindows
95189>>>>>        Move (SizeOfArray(hArrayOfWindows)) to iWindows
95190>>>>>        For i from 0 to (iWindows-1)
95196>>>>>>
95196>>>>>            Send Destroy of hArrayOfWindows[i] // assume this removes all menu items of this action
95197>>>>>        Loop
95198>>>>>>
95198>>>>>        Move (ResizeArray(hArrayOfWindows,0)) to hArrayOfWindows
95199>>>>>
95199>>>>>        // Add all views to this menu. Create the action and add the item
95199>>>>>        Move 0 to i
95200>>>>>        Get Client_Id to hClientArea // object id of client area
95201>>>>>        If (hClientArea > 0) Begin
95203>>>>>            Get Next_Mdi_Dialog of hClientArea True to hView // find first view
95204>>>>>            While (hView <> 0)
95208>>>>>                If (Active_State(hView)) Begin
95210>>>>>                    // create the action
95210>>>>>                    Get Create U_cCJMDIWindowItem to hArrayOfWindows[i]
95211>>>>>                    Get Label of hView to sLabel // caption bar (name) of view
95212>>>>>                    Set psCaption of hArrayOfWindows[i] to sLabel
95213>>>>>                    Set psDescription of hArrayOfWindows[i] to ("Make this view (" - trim(sLabel) - ") the active window.")
95214>>>>>                    If (current_scope(desktop)=hView and View_mode(hView)<>VIEWMODE_ICONIZE) Begin
95216>>>>>                        Set pbChecked of hArrayOfWindows[i] to True
95217>>>>>                    End
95217>>>>>>
95217>>>>>                    Set phWindow of hArrayOfWindows[i] to hView // used by custom OnExecute
95218>>>>>                    If (i=0) Begin
95220>>>>>                        Set pbControlBeginGroup of hArrayOfWindows[i] to True
95221>>>>>                    End
95221>>>>>>
95221>>>>>                    // Create a menu item for this action
95221>>>>>                    Get AddDynamicControl of hArrayOfWindows[i] hCommandBarControls to vItem
95222>>>>>                    Increment i
95223>>>>>                End
95223>>>>>>
95223>>>>>                Get Next_Mdi_Dialog of hClientArea False to hView // find next
95224>>>>>            Loop
95225>>>>>>
95225>>>>>        End
95225>>>>>>
95225>>>>>
95225>>>>>        Set phArrayOfWindows to hArrayOfWindows
95226>>>>>
95226>>>>>     End_Procedure
95227>>>>>     
95227>>>>>End_Class
95228>>>>>
95228>
95228>Object oHtmlHelp is a cHtmlHelp
95230>End_Object
95231>
95231>Object oApplication is a cVDFD_CE_Application
95233>    Set peHelpType to htHtmlHelp
95234>End_Object
95235>
95235>Object oToolTipController is a cVDFD_CE_ToolTipController
95237>    Move Self to ghoToolTipController
95238>End_Object
95239>
95239>Use oEditContextMenu.pkg
Including file: oEditContextMenu.pkg    (C:\Program Files\Visual DataFlex 17.1\Pkg\oEditContextMenu.pkg)
95239>>>Use cCJStandardMenuItemClasses.pkg
95239>>>
95239>>>Object oEditContextMenu is a cCJContextMenu
95241>>>    
95241>>>    Move Self to Default_Form_Floating_Menu_ID
95242>>>    
95242>>>    Object oUndoMenuItem is a cCJUndoMenuItem
95244>>>    End_Object
95245>>>    
95245>>>    Object oCutMenuItem is a cCJCutMenuItem
95247>>>        Set pbControlBeginGroup to True
95248>>>    End_Object
95249>>>    
95249>>>    Object oCopyMenuItem is a cCJCopyMenuItem
95251>>>    End_Object
95252>>>
95252>>>    Object oPasteMenuItem is a cCJPasteMenuItem
95254>>>    End_Object
95255>>>
95255>>>    Object oDeleteItem is a cCJDeleteEditMenuItem
95257>>>    End_Object
95258>>>
95258>>>    Object oSelectAllMenuItem is a cCJSelectAllMenuItem
95260>>>        Set pbControlBeginGroup to True
95261>>>    End_Object
95262>>>
95262>>>End_Object
95263>>>
95263>Use oDEOEditContextMenu17.pkg
Including file: oDEOEditContextMenu17.pkg    (C:\Program Files\Visual DataFlex 17.1\Pkg\oDEOEditContextMenu17.pkg)
95263>>>Use Windows.pkg
95263>>>Use cCJStandardMenuItemClasses.pkg
95263>>>Use cCJDeoMenuItemClasses.pkg
95263>>>
95263>>>
95263>>>Object oDEOEditContextMenu17 is a cCJContextMenu
95265>>>    
95265>>>    Move Self to Default_dbFloating_Menu_ID
95266>>>    
95266>>>    Object oUndoMenuItem is a cCJUndoMenuItem
95268>>>    End_Object
95269>>>    
95269>>>    Object oCutMenuItem is a cCJCutMenuItem
95271>>>        Set pbControlBeginGroup to True
95272>>>    End_Object
95273>>>    
95273>>>    Object oCopyMenuItem is a cCJCopyMenuItem
95275>>>    End_Object
95276>>>
95276>>>    Object oPasteMenuItem is a cCJPasteMenuItem
95278>>>    End_Object
95279>>>
95279>>>    Object oDeleteItem is a cCJDeleteEditMenuItem
95281>>>    End_Object
95282>>>
95282>>>    Object oSelectAllMenuItem is a cCJSelectAllMenuItem
95284>>>        Set pbControlBeginGroup to True
95285>>>    End_Object
95286>>>
95286>>>    Object oPromptMenuItem is a cCJPromptMenuItem
95288>>>        Set pbControlBeginGroup to True
95289>>>    End_Object
95290>>>
95290>>>    Object oFindNextMenu is a cCJFindNextMenuItem
95292>>>        Set pbControlBeginGroup to True
95293>>>    End_Object
95294>>>
95294>>>    Object oFindPreviousMenu is a cCJFindPreviousMenuItem
95296>>>    End_Object
95297>>>
95297>>>    Object oClearMenuItem is a cCJClearMenuItem
95299>>>        Set pbControlBeginGroup to True
95300>>>    End_Object
95301>>>
95301>>>    Object oClearAllMenu is a cCJClearAllMenuItem
95303>>>    End_Object
95304>>>
95304>>>    Object oSaveMenu is a cCJSaveMenuItem
95306>>>    End_Object
95307>>>    
95307>>>    Object oDeleteMenu is a cCJDeleteMenuItem
95309>>>    End_Object
95310>>>
95310>>>    Object oRememberitem is a cCJRememberFieldMenuItem
95312>>>        Set pbControlBeginGroup to True
95313>>>    End_Object
95314>>>
95314>>>    Object oRetainItem is a cCJRememberLastFieldMenuItem
95316>>>    End_Object
95317>>>
95317>>>    Object oUnRememberitem is a cCJUnRememberFieldMenuItem
95319>>>    End_Object
95320>>>
95320>>>    Object oCJClearAllDynamicDefaults is a cCJUnRememberFieldAllMenuItem
95322>>>    End_Object
95323>>>
95323>>>End_Object
95324>
95324>Object oMain is a cVDFD_CE_Panel
95326>    Set Label To "My Project"
95327>    Set Location to 4 3
95328>    Set Size to 300 450
95329>
95329>    Object oCommandBarSystem is a cCJCommandBarSystem
95331>        Set pbTimerUpdate to True
95332>
95332>        Procedure OnCreateCommandBars
95335>            Handle hoOptions
95335>            Get OptionsObject to hoOptions
95336>            Forward Send OnCreateCommandBars
95338>        End_Procedure
95339>
95339>        Object oMenuBar is a cCJMenuBar
95341>
95341>            Object oFileMenu is a cCJMenuItem
95343>                Set peControlType to xtpControlPopup          
95344>                Set psCaption   to "&File"
95345>                Set psDescription to "Find, Save, Delete, Clear information or quit this application."
95346>                Set psCategory to "Menus"
95347>
95347>                Object oClearMenuItem is a cCJClearMenuItem
95349>                    Set pbAddToDesignerMenu to True
95350>                End_Object
95351>
95351>                Object oClearAllMenu is a cCJClearAllMenuItem
95353>                    Set pbAddToDesignerMenu to True
95354>                End_Object
95355>
95355>                Object oPromptMenuItem is a cCJPromptMenuItem
95357>                    Set pbAddToDesignerMenu to True
95358>                    Set pbControlBeginGroup to True
95359>                End_Object
95360>
95360>                Object oFindMenuItem is a cCJFindMenuItem
95362>                    Set pbAddToDesignerMenu to True
95363>                    Set pbControlBeginGroup to True
95364>                End_Object
95365>
95365>                Object oFindNextMenu is a cCJFindNextMenuItem
95367>                    Set pbAddToDesignerMenu to True
95368>                End_Object
95369>
95369>                Object oFindPreviousMenu is a cCJFindPreviousMenuItem
95371>                    Set pbAddToDesignerMenu to True
95372>                End_Object
95373>
95373>                Object oFindFirstMenu is a cCJFindFirstMenuItem
95375>                    Set pbAddToDesignerMenu to True
95376>                End_Object
95377>
95377>                Object oFindLastMenu is a cCJFindLastMenuItem
95379>                    Set pbAddToDesignerMenu to True
95380>                End_Object
95381>
95381>                Object oSaveMenuItem is a cCJSaveMenuItem
95383>                    Set pbAddToDesignerMenu to True
95384>                    Set pbControlBeginGroup to True
95385>                End_Object
95386>
95386>                Object oDeleteMenuItem is a cCJDeleteMenuItem
95388>                    Set pbAddToDesignerMenu to True
95389>                End_Object
95390>
95390>                Object oExitMenu is a cCJExitMenuItem
95392>                    Set pbControlBeginGroup to True
95393>                End_Object
95394>
95394>            End_Object
95395>
95395>            Object oViewMenu is a cCJMenuItem
95397>                Set peControlType to xtpControlPopup
95398>                Set psCaption to "&View"
95399>                Set psToolTip to "View"
95400>                Set psDescription to "Available Views"
95401>
95401>                Object oNewViewMenuItem is a cCJMenuItem
95403>                    Set psCaption to "New View"
95404>                    Set psTooltip to "New View"
95405>                
95405>                    Procedure OnExecute Variant vCommandBarControl
95408>                        Handle hoClient
95408>                        Get Client_Id to hoClient
95409>                        Send Activate_oTEST_VDFD_CE_vw of hoClient
95410>                    End_Procedure
95411>                End_Object
95412>            End_Object
95413>            
95413>            Object oReportMenu is a cCJMenuItem
95415>                Set peControlType to xtpControlPopup          
95416>                Set psCaption to "&Report"
95417>                Set psToolTip to "Report"
95418>                Set psDescription to "Available Reports"
95419>            End_Object
95420>
95420>            Object oNavigateMenu is a cCJMenuItem
95422>                Set peControlType to xtpControlPopup      
95423>                Set psCaption to "&Navigate"    
95424>                Set psTooltip to "Navigate"    
95425>                Set psDescription to "Move to different areas of the application"
95426>
95426>                Object oNextAreaMenu is a cCJNextAreaMenu
95428>                End_Object
95429>
95429>                Object oPriorAreaMenu is a cCJPriorAreaMenu
95431>                End_Object
95432>
95432>                Object oNextViewMenu is a cCJNextViewMenu
95434>                End_Object
95435>
95435>                Object oPriorViewMenu is a cCJPriorViewMenu
95437>                End_Object
95438>
95438>                Object oPromptMenu is a cCJPromptMenuItem
95440>                    Set pbControlBeginGroup to True
95441>                End_Object
95442>
95442>                Object oZoomMenu is a cCJZoomMenuItem
95444>                End_Object
95445>
95445>            End_Object
95446>
95446>            Object oWindowMenu is a cCJMDIWindowsMenuItem
95448>                Set peControlType to xtpControlPopup
95449>                Set psCaption to "&Window"
95450>                Set psToolTip to "Window"
95451>                Set psDescription to "Display Current Views and set other display options."    
95452>
95452>                // These are the static windows items. More will be created in onInitPopup 
95452>                Object oDisplayOptionsMenu is a cCJMenuItem
95454>                    Set peControlType to xtpControlPopup          
95455>                    Set psCaption to "&Display Options"
95456>                    Set psToolTip to "Display Options"
95457>                    Set psDescription to "Set display options"
95458>
95458>                    Object oStatusbarMenu is a cCJStatusbarMenuItem
95460>                    End_Object
95461>
95461>                    Object oAutoArrangeIconsMenu is a cCJAutoArrangeIconsMenuItem
95463>                    End_Object
95464>
95464>                    Object oRestoreMenusMenu is a cCJRestoreMenusMenuItem
95466>                        Set pbControlBeginGroup to True
95467>                    End_Object
95468>
95468>                End_Object
95469>
95469>                Object oCascadeMenu is a cCJCascadeMenuItem
95471>                    Set pbControlBeginGroup to True
95472>                End_Object
95473>
95473>                Object oHorizTile is a cCJTileHorizontally
95475>                End_Object
95476>
95476>                Object oVertTile is a cCJTileVertically
95478>                End_Object
95479>
95479>                Object oMinimizeMenuItem is a cCJMinimizeWindowsMenuItem
95481>                    Set pbControlBeginGroup to True
95482>                End_Object
95483>
95483>                Object oRestoreMenuItem is a cCJRestoreWindowsMenuItem
95485>                End_Object
95486>
95486>                Object oArrangeIconsMenuItem is a cCJAutoArrangeIconsMenuItem
95488>                    Set pbControlBeginGroup to True
95489>                End_Object
95490>
95490>            End_Object
95491>
95491>            Object oHelpMenu is a cCJMenuItem
95493>                Set peControlType to xtpControlPopup    
95494>                Set psCaption to "&Help"
95495>                Set psDescription to "Access Information for learning and using this DataFlex application."
95496>                Set psToolTip to "Help"
95497>
95497>                Object oHelpMenuItem is a cCJHelpMenuItem 
95499>                End_Object
95500>
95500>                Object oAboutMenuItem is a cCJAboutMenuItem
95502>                End_Object
95503>
95503>            End_Object
95504>
95504>        End_Object
95505>
95505>        Object oFindToolBar is a cCJToolbar
95507>            Set psTitle to "Finding Toolbar"
95508>
95508>            Object oFindFirstTool is a cCJFindFirstMenuItem
95510>            End_Object
95511>
95511>            Object oFindPreviousTool is a cCJFindPreviousMenuItem
95513>            End_Object
95514>
95514>            Object oFindMenuTool is a cCJFindMenuItem
95516>            End_Object
95517>
95517>            Object oFindNextTool is a cCJFindNextMenuItem
95519>            End_Object
95520>
95520>            Object oFindLastTool is a cCJFindLastMenuItem
95522>            End_Object
95523>
95523>            Object oPromptToolItem is a cCJPromptMenuItem
95525>                Set pbControlBeginGroup to True
95526>            End_Object
95527>
95527>        End_Object
95528>
95528>        Object oFileToolBar is a cCJToolbar
95530>            Set psTitle to "Data Entry Toolbar"
95531>
95531>            Object oClearToolItem is a cCJClearMenuItem
95533>                Set peControlStyle to xtpButtonIconAndCaption
95534>            End_Object
95535>
95535>            Object oClearAllToolItem2 is a cCJClearAllMenuItem
95537>                Set peControlStyle to xtpButtonIconAndCaption
95538>            End_Object
95539>
95539>            Object oSaveToolItem is a cCJSaveMenuItem
95541>                Set peControlStyle to xtpButtonIconAndCaption
95542>                Set pbControlBeginGroup to True
95543>            End_Object
95544>
95544>            Object oDeleteToolItem is a cCJDeleteMenuItem
95546>                Set peControlStyle to xtpButtonIconAndCaption
95547>            End_Object
95548>
95548>        End_Object
95549>
95549>        Object oEditToolBar is a cCJToolbar
95551>            Set psTitle to "Edit Toolbar"
95552>
95552>            Object oCutToolbarItem is a cCJCutMenuItem
95554>            End_Object
95555>
95555>            Object oCopyToolbarItem is a cCJCopyMenuItem
95557>            End_Object
95558>
95558>            Object oPasteToolbarItem is a cCJPasteMenuItem
95560>            End_Object
95561>
95561>            Object oDeleteEditToolbarItem is a cCJDeleteEditMenuItem
95563>                Set pbControlBeginGroup to True
95564>            End_Object
95565>
95565>        End_Object
95566>
95566>        Object oRememberToolbar is a cCJToolbar
95568>
95568>            Object oRememberItems is a cCJMenuItem
95570>
95570>                Set peControlType to xtpControlPopup
95571>                Set peControlStyle to xtpButtonCaption
95572>                Set psCaption to C_$Remember
95573>                
95573>                Object oMenuItem is a cCJRememberFieldMenuItem
95575>                    Set peControlStyle to xtpButtonIconAndCaption
95576>                End_Object
95577>                
95577>                Object oMenuItem is a cCJRememberLastFieldMenuItem
95579>                    Set peControlStyle to xtpButtonIconAndCaption
95580>                End_Object
95581>                
95581>                Object oMenuItem is a cCJUnRememberFieldMenuItem
95583>                    Set peControlStyle to xtpButtonIconAndCaption
95584>                End_Object
95585>                
95585>                Object oMenuItem is a cCJUnRememberFieldAllMenuItem
95587>                    Set peControlStyle to xtpButtonIconAndCaption
95588>                End_Object
95589>
95589>            End_Object
95590>            
95590>        End_Object
95591>        
95591>        Object oStatusBar is a cCJStatusBar
95593>
95593>            Object oStatusPane1 is a cCJStatusBarPane
95595>                Set piID to sbpIDIdlePane
95596>                Set pbStyleStretch to True
95597>            End_Object
95598>
95598>            Object oStatusPane2 is a cCJStatusBarPane
95600>                Set phoViewPane to Self
95601>                Set pbStyleStretch to True
95602>            End_Object
95603>
95603>        End_Object
95604>
95604>    End_Object
95605>
95605>    Object oClientArea is a cVDFD_CE_ClientArea
95607>        Use StdAbout.pkg
Including file: StdAbout.pkg    (C:\Program Files\Visual DataFlex 17.1\Pkg\StdAbout.pkg)
95607>>>//************************************************************************
95607>>>// Confidential Trade Secret.
95607>>>// Copyright (c) 1997 Data Access Corporation, Miami Florida
95607>>>// as an unpublished work.  All rights reserved.
95607>>>// DataFlex is a registered trademark of Data Access Corporation.
95607>>>//
95607>>>//************************************************************************
95607>>>//************************************************************************
95607>>>//
95607>>>// $File name  : StdAbout.pkg
95607>>>// $File title : Standard about object package for VDF
95607>>>// Notice      :
95607>>>// $Author(s)  : John Tuohy
95607>>>//
95607>>>// $Rev History
95607>>>//
95607>>>// JT 06/27/97   File created
95607>>>//************************************************************************
95607>>>
95607>>>// This provides a quick and simple way to create an about package for a program.
95607>>>// You need to create a message inside you client area called Activate_About.
95607>>>// Within this message you should send the message DoAbout passing needed
95607>>>// string information.
95607>>>//
95607>>>//       Procedure Activate_About
95607>>>//           Send DoAbout sTitle sVersion sCopyright sAuthor sBitmap
95607>>>//       End_Procedure
95607>>>//    where: sTitle =     Name of application. If none provided, uses caption
95607>>>//                        bar title
95607>>>//           sVersion   = Version Line. If none provided, will be blank
95607>>>//           sCopyRight = Copyright Line. If none provided, will be blank
95607>>>//           sAuthor    = Author name, blank if none provided
95607>>>//           sBitMap    = Bitmap logo. If none provided, standard VDF bitmap
95607>>>//                        is used.
95607>>>// It is expected that you will place this in your own object package. For
95607>>>// example an order about package may look like this:
95607>>>//
95607>>>//   // OrderAbout.pkg
95607>>>//   Use StdAbout.pkg
95607>>>//   Procedure Activate_About
95607>>>//      String sTitle sCopyright sVersion sAuthor
95607>>>//      Move "My Order Entry System" to sTitle
95607>>>//      Move "Version 2.1" to sVersion
95607>>>//      Move "Copyright 1997, Super Software Inc." to sCopyright
95607>>>//      Move "John Smith"  to sAuthor
95607>>>//      Send DoAbout sTitle sVersion sCopyright sAuthor ""
95607>>>//   end_procedure
95607>>>//   // end of file.
95607>>>
95607>>>Use DfAbout.pkg
Including file: Dfabout.pkg    (C:\Program Files\Visual DataFlex 17.1\Pkg\Dfabout.pkg)
95607>>>>>//************************************************************************
95607>>>>>// Confidential Trade Secret.
95607>>>>>// Copyright (c) 1997 Data Access Corporation, Miami Florida
95607>>>>>// as an unpublished work.  All rights reserved.
95607>>>>>// DataFlex Is A registered trademark Of Data Access Corporation.
95607>>>>>//
95607>>>>>//************************************************************************
95607>>>>>//************************************************************************
95607>>>>>//
95607>>>>>// $File name  : DfAbout.pkg
95607>>>>>// $File title : About class support
95607>>>>>// Notice      :
95607>>>>>// $Author(s)  : Vincent Oorsprong, Ken Ross
95607>>>>>//
95607>>>>>// $Rev History
95607>>>>>//
95607>>>>>// VOO 02/22/2012 Replaced obsolete code, improved Network_User_Name by asking
95607>>>>>//                Windows for the size first. 
95607>>>>>// VOO 07/25/2003 Removed OnResize procedure for sysinfo dialog. Replaced logic
95607>>>>>//                with anchor technique. Removed unnessary property in the
95607>>>>>//                sysinfo dialog. Changed the size Of the about & sysinfo dialog
95607>>>>>//                object To better look in Windows XP. Repositioned the close
95607>>>>>//                button in the sysinfo dialog To line up with the display area
95607>>>>>//                Replaced obsolete code and techniques. Removed dead code.
95607>>>>>// JJT 10/23/2001 removed all ghoworkspace support. Uses app object or nothing
95607>>>>>// SWB 07/19/01   Added support Of the Application object in preference to
95607>>>>>//                the global Workspace object, if it is present
95607>>>>>// JJT 11/05/98   Added version information
95607>>>>>// VOO 29/10/98   Replaced the GetFreeSystemResources for the Win32 variant
95607>>>>>// JJT 7/31/97    Registered Enumerate Workspace so dfabout can exist without
95607>>>>>//                workspace package.
95607>>>>>// JJT 6/27/97    Turned the sysinfo objects into classes so the AboutDialog
95607>>>>>//                class can create this object.
95607>>>>>//                Cleaned up the interface (used correct classes and messages)
95607>>>>>//                Added workspace reporting support To sys-info.
95607>>>>>//                Turned off wrapping in the sys-info editor.
95607>>>>>// KR  ??/??/96   File created
95607>>>>>//************************************************************************
95607>>>>>Use LanguageText.pkg
95607>>>>>Use Windows.pkg
95607>>>>>Use DFbitmap.pkg
95607>>>>>Use GlobalFunctionsProcedures.pkg
95607>>>>>Use cTextEdit.pkg
95607>>>>>
95607>>>>>Use cli.pkg
Including file: cli.pkg    (C:\Program Files\Visual DataFlex 17.1\Pkg\cli.pkg)
95607>>>>>>>//*****************************************************************************
95607>>>>>>>//*** CLI.PKG                                                               ***
95607>>>>>>>//***                                                                       ***
95607>>>>>>>//*** Author: Ben Weijers                                                   ***
95607>>>>>>>//***         Data Access Nederland                                         ***
95607>>>>>>>//***         10 September 1998                                             ***
95607>>>>>>>//***                                                                       ***
95607>>>>>>>//*** Purpose:                                                              ***
95607>>>>>>>//***   CLI specific functionality. There are several connectivity kits     ***
95607>>>>>>>//***   based on  SQL/92 CLI. Those are:                                    ***
95607>>>>>>>//***    - ODBC_DRV  The Data Access CK for ODBC                            ***
95607>>>>>>>//***    - DB2_DRV   The Data Access CK for DB2                             ***
95607>>>>>>>//***    - MSSQLDRV  The Data Access CK for Microsoft SQL Server            ***
95607>>>>>>>//***                                                                       ***
95607>>>>>>>//***   This package defines the common functionality for all CLI based     ***
95607>>>>>>>//***   drivers.                                                            ***
95607>>>>>>>//***                                                                       ***
95607>>>>>>>//***   Updated:  May 23rd 2008 (Current CK build: 5.0.0.53 )               ***
95607>>>>>>>//***             Added NULLABLE and DEFAULT attributes for DATETIME type   ***
95607>>>>>>>//***   Updated:  Apr  6th 2009 (Current CK build: 5.0.0.61 )               ***
95607>>>>>>>//***             Added DF_DRIVER_MATCH_CLIENT_SERVER_VERSION attribute     ***
95607>>>>>>>//***                   DF_DRIVER_SQLSERVER_CLIENT_VERSION    attribute     ***
95607>>>>>>>//***   Updated:  Mar 30th 2012 (Current CK build: 5.1.0.93 )               ***
95607>>>>>>>//***             Added SQLSERVER2012CLIENT return value for                ***
95607>>>>>>>//***             DF_DRIVER_SQLSERVER_CLIENT_VERSION attribute              ***
95607>>>>>>>//***   Updated:  June 4th 2012 (Current CK build: 5.1.0.96)                ***
95607>>>>>>>//***             Moved SQL Server client constants from cli.pkg to         ***
95607>>>>>>>//***             mssqldrv.pkg                                              ***
95607>>>>>>>//*****************************************************************************
95607>>>>>>>
95607>>>>>>>//*** We are not using ifndef below becuase that is not supported in Character Mode
95607>>>>>>>//*** Driver attributes
95607>>>>>>>
95607>>>>>>>
95607>>>>>>>
95607>>>>>>>
95607>>>>>>>
95607>>>>>>>//-------------------------------------
95607>>>>>>>
95607>>>>>>>//*** Replacement for logical column number that indicates all columns
95607>>>>>>>
95607>>>>>>>//*** Possible DF_FILE_GENERATE_RECORD_ID_METHOD values
95607>>>>>>>
95607>>>>>>>//*** Possible DF_FIELD_READ_ONLY values
95607>>>>>>>
95607>>>>>>>// Moved to Mssqldrv.pkg
95607>>>>>>>//*** Possible DF_DRIVER_SQLSERVER_CLIENT_VERSION values
95607>>>>>>>//#REPLACE SQLSERVERUNKNOWNCLIENT  0
95607>>>>>>>//#REPLACE SQLSERVER2000CLIENT     8          //   "SQL Server"
95607>>>>>>>//#REPLACE SQLSERVER2005CLIENT     9          //   "SQL Native Client"
95607>>>>>>>//#REPLACE SQLSERVER2008CLIENT    10          //   "SQL Server Native Client 10.0"
95607>>>>>>>//#Replace SQLSERVER2012CLIENT    11          //   "SQL Server Native Client 11.0"
95607>>>>>>>
95607>>>>>>>//*** Possible SQL Column type values
95607>>>>>>>Define SQL_UNKNOWN_TYPE   For    0
95607>>>>>>>Define SQL_CHAR           For    1
95607>>>>>>>Define SQL_NUMERIC        For    2
95607>>>>>>>Define SQL_DECIMAL        For    3
95607>>>>>>>Define SQL_INTEGER        For    4
95607>>>>>>>Define SQL_SMALLINT       For    5
95607>>>>>>>Define SQL_FLOAT          For    6
95607>>>>>>>Define SQL_REAL           For    7
95607>>>>>>>Define SQL_DOUBLE         For    8
95607>>>>>>>Define SQL_DATETIME       For    9
95607>>>>>>>Define SQL_VARCHAR        For   12
95607>>>>>>>Define SQL_TYPE_DATE      For   91
95607>>>>>>>Define SQL_TYPE_TIME      For   92
95607>>>>>>>Define SQL_TYPE_TIMESTAMP For   93
95607>>>>>>>
95607>>>>>>>Define SQL_DATE           For    9
95607>>>>>>>Define SQL_INTERVAL       For   10
95607>>>>>>>Define SQL_TIME           For   10
95607>>>>>>>Define SQL_TIMESTAMP      For   11
95607>>>>>>>Define SQL_LONGVARCHAR    For  (-1)
95607>>>>>>>Define SQL_BINARY         For  (-2)
95607>>>>>>>Define SQL_VARBINARY      For  (-3)
95607>>>>>>>Define SQL_LONGVARBINARY  For  (-4)
95607>>>>>>>Define SQL_BIGINT         For  (-5)
95607>>>>>>>Define SQL_TINYINT        For  (-6)
95607>>>>>>>Define SQL_BIT            For  (-7)
95607>>>>>>>Define SQL_WCHAR          For  (-8)
95607>>>>>>>Define SQL_WVARCHAR       For  (-9)
95607>>>>>>>Define SQL_WLONGVARCHAR   For (-10)
95607>>>>>>>Define SQL_GUID           For (-11)
95607>>>>>>>
95607>>>>>>>//*** Driver level attributes
95607>>>>>>>
95607>>>>>>>
95607>>>>>>>//*** Error number constants
95607>>>>>>>
95607>>>>>>>
95607>>>>>>>//*** Call driver function identifiers
95607>>>>>>>
95607>>>>>>>
95607>>>>>>>//*** Init data source types
95607>>>>>>>
95607>>>>>>>
95607>>>>>>>//*** Dummy strings used in the commands
95607>>>>>>>    String  CLI$StrDummy 255
95607>>>>>>>    Integer CLI$IntDummy
95607>>>>>>>
95607>>>>>>>
95607>>>>>>>//*****************************************************************************
95607>>>>>>>//*** CLI_SetConstraint <FileNum> <NewState>                                ***
95607>>>>>>>//***                                                                       ***
95607>>>>>>>//***   Setup a constraint for a file.                                      ***
95607>>>>>>>//*****************************************************************************
95607>>>>>>>
95607>>>>>>>
95607>>>>>>>
95607>>>>>>>
95607>>>>>>>//*****************************************************************************
95607>>>>>>>//*** CLI_Set_Driver_Atrtribute / CLI_Get_Driver_Attribute                  ***
95607>>>>>>>//***                                                                       ***
95607>>>>>>>//*** Set or get an attribute at driver level. These attributes, when set,  ***
95607>>>>>>>//*** will be set for the remainder of the session or until set again. To   ***
95607>>>>>>>//*** permanently set driver level attributes change the driver             ***
95607>>>>>>>//*** configuration file.                                                   ***
95607>>>>>>>//*****************************************************************************
95607>>>>>>>
95607>>>>>>>
95607>>>>>>>
95607>>>>>>>
95607>>>>>>>
95607>>>>>>>
95607>>>>>>>
95607>>>>>>>//*****************************************************************************
95607>>>>>>>//*** Class  : cCLIHandler                                                  ***
95607>>>>>>>//*** Purpose: An instance of this class can be used as a broker object to  ***
95607>>>>>>>//***          call several CLI releated methods.                           ***
95607>>>>>>>//*****************************************************************************
95607>>>>>>>
95607>>>>>>>Class cCLIHandler Is An Array
95608>>>>>>>
95608>>>>>>>    Procedure Construct_Object Integer iImage
95610>>>>>>>        Forward Send Construct_object iImage
95612>>>>>>>
95612>>>>>>>        Property String  psDriverID       Public ""
95613>>>>>>>    End_Procedure // Construct_Object
95614>>>>>>>
95614>>>>>>>
95614>>>>>>>
95614>>>>>>>    //***
95614>>>>>>>    //*** Fucntion: CKRevsion
95614>>>>>>>    //*** Purpose : The revsion of a CLI Connectivity Kit
95614>>>>>>>    //***
95614>>>>>>>
95614>>>>>>>    Function CKRevision Returns String
95616>>>>>>>        Local String  sDriverID
95616>>>>>>>        Local String  sRevision
95616>>>>>>>        Local String  sVoid
95616>>>>>>>        Local Integer iRetval
95616>>>>>>>
95616>>>>>>>        Get psDriverID To sDriverID
95617>>>>>>>        If (sDRiverID <> "") Begin
95619>>>>>>>            Move (Repeat(" ", 255)) To sRevision
95620>>>>>>>            Call_Driver 0 sDRiverID Function CLI_CKREVISION Callback 0 Passing sRevision sVoid 0 Result iRetval
95625>>>>>>>        End
95625>>>>>>>>
95625>>>>>>>
95625>>>>>>>        Function_Return sRevision
95626>>>>>>>    End_Function // CKRevision
95627>>>>>>>
95627>>>>>>>
95627>>>>>>>
95627>>>>>>>    //***
95627>>>>>>>    //*** Function: ExtractPartFromRevision
95627>>>>>>>    //*** Purpose : Extarct the Nth part of a a.b.c.d revsion string.
95627>>>>>>>    //***
95627>>>>>>>    //*** Returns : The part version number or -1 if there is no such part number.
95627>>>>>>>    //***
95627>>>>>>>
95627>>>>>>>    Function ExtractPartFromRevision Integer iPartNum String sRevision Returns Integer
95629>>>>>>>        Local Integer iPartRev
95629>>>>>>>        Local Integer iCurrentPart
95629>>>>>>>        Local Integer iSeparatorPos
95629>>>>>>>
95629>>>>>>>        If (iPartNum > 4) ;            Function_Return -1
95632>>>>>>>
95632>>>>>>>        Move 0 To iCurrentPart
95633>>>>>>>        Repeat
95633>>>>>>>>
95633>>>>>>>            Move (Pos(".", sRevision)) To iSeparatorPos
95634>>>>>>>            If (iSeparatorPos > 0) Begin
95636>>>>>>>                Move (Left(sRevision, iSeparatorPos - 1)) To iPartRev
95637>>>>>>>                Move (Right(sRevision, Length(sRevision) - iSeparatorPos)) To sRevision
95638>>>>>>>                Increment iCurrentPart
95639>>>>>>>            End
95639>>>>>>>>
95639>>>>>>>            Else If (sRevision <> "") Begin
95642>>>>>>>                Move sRevision To iPartRev
95643>>>>>>>                Move "" To sRevision
95644>>>>>>>                Increment iCurrentPart
95645>>>>>>>            End
95645>>>>>>>>
95645>>>>>>>            Else ;                Move -1 To iPartRev
95647>>>>>>>        Until (iCurrentPart >= iPartNum Or iPartRev = -1)
95649>>>>>>>
95649>>>>>>>        Function_Return iPartRev
95650>>>>>>>    End_Function // EcxtractPartFromRevision
95651>>>>>>>
95651>>>>>>>
95651>>>>>>>
95651>>>>>>>    //***
95651>>>>>>>    //*** Function: CKMajorRevision
95651>>>>>>>    //*** Purpose : Returns the major revision of the CK
95651>>>>>>>    //***
95651>>>>>>>
95651>>>>>>>    Function CKMajorRevision Returns Integer
95653>>>>>>>        Function_Return (ExtractPartFromRevision (Current_Object, 1, CKRevision(Current_Object)))
95654>>>>>>>    End_Function // CKMajorRevision
95655>>>>>>>
95655>>>>>>>
95655>>>>>>>
95655>>>>>>>    //***
95655>>>>>>>    //*** Function: CKMinorRevision
95655>>>>>>>    //*** Purpose : Returns the minor revision of the CK
95655>>>>>>>    //***
95655>>>>>>>
95655>>>>>>>    Function CKMinorRevision Returns Integer
95657>>>>>>>        Function_Return (ExtractPartFromRevision (Current_Object, 2, CKRevision(Current_Object)))
95658>>>>>>>    End_Function // CKMinorRevision
95659>>>>>>>
95659>>>>>>>
95659>>>>>>>
95659>>>>>>>    //***
95659>>>>>>>    //*** Function: CKReleaseRevision
95659>>>>>>>    //*** Purpose : Returns the release revision of the CK
95659>>>>>>>    //***
95659>>>>>>>
95659>>>>>>>    Function CKReleaseRevision Returns Integer
95661>>>>>>>        Function_Return (ExtractPartFromRevision (Current_Object, 3, CKRevision(Current_Object)))
95662>>>>>>>    End_Function // CKReleaseRevision
95663>>>>>>>
95663>>>>>>>
95663>>>>>>>
95663>>>>>>>    //***
95663>>>>>>>    //*** Function: CKBuildRevision
95663>>>>>>>    //*** Purpose : Returns the major revision of the CK
95663>>>>>>>    //***
95663>>>>>>>
95663>>>>>>>    Function CKBuildRevision Returns Integer
95665>>>>>>>        Function_Return (ExtractPartFromRevision (Current_Object, 4, CKRevision(Current_Object)))
95666>>>>>>>    End_Function // CKBuildRevision
95667>>>>>>>
95667>>>>>>>
95667>>>>>>>
95667>>>>>>>    //***
95667>>>>>>>    //*** Function: IsMinimalRevision
95667>>>>>>>    //*** Purpose : Determines if the CK conforms to a passed minimal revsion.
95667>>>>>>>    //***
95667>>>>>>>
95667>>>>>>>    Function IsMinimalRevision Integer iMajor Integer iMinor Integer iRelease Integer iBuild Returns Integer
95669>>>>>>>        If (iMajor < CKMajorRevision(Current_object)) ;            Function_return (TRUE)
95672>>>>>>>        Else If (iMajor = CKMajorRevision(Current_object)) Begin
95675>>>>>>>            If (iMinor < CKMinorRevision(Current_object)) ;                Function_return (TRUE)
95678>>>>>>>            Else If (iMinor = CKMinorRevision(Current_object)) Begin
95681>>>>>>>                If (iRelease < CKReleaseRevision(Current_object)) ;                    Function_return (TRUE)
95684>>>>>>>                Else If (iRelease = CKReleaseRevision(Current_object) And iBuild <= CKBuildRevision(Current_object)) ;                    Function_return (TRUE)
95688>>>>>>>            End
95688>>>>>>>>
95688>>>>>>>        End
95688>>>>>>>>
95688>>>>>>>
95688>>>>>>>        Function_Return (FALSE)
95689>>>>>>>    End_Function // IsMinimalRevision
95690>>>>>>>
95690>>>>>>>
95690>>>>>>>
95690>>>>>>>    //***
95690>>>>>>>    //*** Function: RegistrationName
95690>>>>>>>    //*** Purpose : Returns the Connectiivty Kit registration name.
95690>>>>>>>    //***
95690>>>>>>>
95690>>>>>>>    Function RegistrationName Returns String
95692>>>>>>>        Local String  sRegistration
95692>>>>>>>        Local String  sDRiverId
95692>>>>>>>        Local String  sVoid
95692>>>>>>>        Local Integer iRetval
95692>>>>>>>
95692>>>>>>>        Get psDriverID To sDriverID
95693>>>>>>>        If (sDRiverID <> "") Begin
95695>>>>>>>            Move (Repeat(" ", 255)) To sRegistration
95696>>>>>>>            Call_Driver 0 sDRiverID Function CLI_GETREGNAME Callback 0 Passing sRegistration sVoid 0 Result iRetval
95701>>>>>>>        End
95701>>>>>>>>
95701>>>>>>>
95701>>>>>>>        Function_Return sRegistration
95702>>>>>>>    End_Function // RegistrationName
95703>>>>>>>
95703>>>>>>>
95703>>>>>>>
95703>>>>>>>    //***
95703>>>>>>>    //*** Function: SerialNumber
95703>>>>>>>    //*** Purpose : Returns the Connectiivty Kit serial number.
95703>>>>>>>    //***
95703>>>>>>>
95703>>>>>>>    Function SerialNumber Returns Integer
95705>>>>>>>        Local String  sDRiverId
95705>>>>>>>        Local String  sVoid
95705>>>>>>>        Local Integer iRetval
95705>>>>>>>
95705>>>>>>>        Get psDriverID To sDriverID
95706>>>>>>>        If (sDRiverID <> "") Begin
95708>>>>>>>            Call_Driver 0 sDRiverID Function CLI_GETSERIALNUM Callback 0 Passing sVoid sVoid 0 Result iRetval
95713>>>>>>>        End
95713>>>>>>>>
95713>>>>>>>
95713>>>>>>>        Function_Return iRetval
95714>>>>>>>    End_Function // SerialNumber
95715>>>>>>>
95715>>>>>>>
95715>>>>>>>
95715>>>>>>>    //***
95715>>>>>>>    //*** Function: MaxUsers
95715>>>>>>>    //*** Purpose : Returns the Connectiivty Kit maximum number of users.
95715>>>>>>>    //***
95715>>>>>>>
95715>>>>>>>    Function MaxUsers Returns Integer
95717>>>>>>>        Local String  sDRiverId
95717>>>>>>>        Local String  sVoid
95717>>>>>>>        Local Integer iRetval
95717>>>>>>>
95717>>>>>>>        Get psDriverID To sDriverID
95718>>>>>>>        If (sDRiverID <> "") Begin
95720>>>>>>>            Call_Driver 0 sDRiverID Function CLI_GETMAXUSERS Callback 0 Passing sVoid sVoid 0 Result iRetval
95725>>>>>>>        End
95725>>>>>>>>
95725>>>>>>>
95725>>>>>>>        Function_Return iRetval
95726>>>>>>>    End_Function // MaxUsers
95727>>>>>>>
95727>>>>>>>
95727>>>>>>>
95727>>>>>>>    //***
95727>>>>>>>    //*** Procedure: DumpStatus
95727>>>>>>>    //*** Purpose  : Dump the current status of the drver in the passed disk file.
95727>>>>>>>    //***
95727>>>>>>>
95727>>>>>>>    Procedure DumpStatus String sFileName
95729>>>>>>>        Local String  sVoid
95729>>>>>>>        Local String  sDriverID
95729>>>>>>>        Local Integer iVoid
95729>>>>>>>
95729>>>>>>>        Get psDriverID To sDriverID
95730>>>>>>>        If (sDriverID <> "") ;            Call_driver 0 sDriverID Function CLI_DUMPSTATUS Callback 0 Passing sFileName sVoid iVoid Result iVoid
95737>>>>>>>    End_Procedure // DumpStatus
95738>>>>>>>
95738>>>>>>>
95738>>>>>>>
95738>>>>>>>    //***
95738>>>>>>>    //*** Procedure: ReadConfiguration
95738>>>>>>>    //*** Purpose  : Reset all driver level configurable attributes to the
95738>>>>>>>    //***            default value and then reread the configuration.
95738>>>>>>>    //***
95738>>>>>>>
95738>>>>>>>    Procedure ReadConfiguration
95740>>>>>>>        Local String  sVoid
95740>>>>>>>        Local String  sDriverID
95740>>>>>>>        Local Integer iVoid
95740>>>>>>>
95740>>>>>>>        Get psDriverID To sDriverID
95741>>>>>>>        If (sDriverID <> "") ;            Call_driver 0 sDriverID Function CLI_READCONFIGURATION Callback 0 Passing sVoid sVoid iVoid Result iVoid
95748>>>>>>>    End_Procedure // ReadConfiguration
95749>>>>>>>
95749>>>>>>>
95749>>>>>>>
95749>>>>>>>    //***
95749>>>>>>>    //*** Function: TextToRIMValue
95749>>>>>>>    //*** Purpose : Convert a text to the corresponding
95749>>>>>>>    //***           Generate_Record_ID_Method attribute value
95749>>>>>>>    //***
95749>>>>>>>
95749>>>>>>>    Function TextToRIMValue String sText Returns Integer
95751>>>>>>>        If (sText = "None") ;            Function_return RIM_NONE
95754>>>>>>>        Else If (sText = "Identity Column") ;            Function_return RIM_IDENTITY_COLUMN
95758>>>>>>>        Else If (sText = "Dispenser Table") ;            Function_return RIM_DISPENSER_TABLE
95762>>>>>>>        Else If (sText = "External") ;            Function_return RIM_EXTERNAL
95766>>>>>>>    End_Function // TextToRIMValue
95767>>>>>>>
95767>>>>>>>
95767>>>>>>>
95767>>>>>>>    //***
95767>>>>>>>    //*** Function: RIMValueTotext
95767>>>>>>>    //*** Purpose : Convert a Generate_Record_ID_Method attribute value to the
95767>>>>>>>    //***           corresponding text.
95767>>>>>>>    //***
95767>>>>>>>
95767>>>>>>>    Function RIMValueToText Integer iAttrValue Returns String
95769>>>>>>>        If (iAttrValue = RIM_NONE) ;            Function_return "None"
95772>>>>>>>        Else If (iAttrValue = RIM_IDENTITY_COLUMN) ;            Function_return "Identity Column"
95776>>>>>>>        Else If (iAttrValue = RIM_DISPENSER_TABLE) ;            Function_return "Dispenser Table"
95780>>>>>>>        Else If (iAttrValue = RIM_EXTERNAL) ;            Function_return "External"
95784>>>>>>>    End_Function // RIMValueToText
95785>>>>>>>
95785>>>>>>>
95785>>>>>>>
95785>>>>>>>    //***
95785>>>>>>>    //*** Function: TextToROValue
95785>>>>>>>    //*** Purpose : Convert a text to the corresponding
95785>>>>>>>    //***           Generate_Record_ID_Method attribute value
95785>>>>>>>    //***
95785>>>>>>>
95785>>>>>>>    Function TextToROValue String sText Returns Integer
95787>>>>>>>        If (sText = "No") ;            Function_return RO_NO
95790>>>>>>>        Else If (sText = "Ignore Change") ;            Function_return RO_IGNORECHANGE
95794>>>>>>>        Else If (sText = "Accept Change") ;            Function_return RO_ACCEPTCHANGE
95798>>>>>>>        Else If (sText = "Error On Change") ;            Function_return RO_ERRORONCHANGE
95802>>>>>>>    End_Function // TextToRIMValue
95803>>>>>>>
95803>>>>>>>
95803>>>>>>>
95803>>>>>>>    //***
95803>>>>>>>    //*** Function: ROValueTotext
95803>>>>>>>    //*** Purpose : Convert a Generate_Record_ID_Method attribute value to the
95803>>>>>>>    //***           corresponding text.
95803>>>>>>>    //***
95803>>>>>>>
95803>>>>>>>    Function ROValueToText Integer iAttrValue Returns String
95805>>>>>>>        If (iAttrValue = RO_NO) ;            Function_return "No"
95808>>>>>>>        Else If (iAttrValue = RO_IGNORECHANGE) ;            Function_return "Ignore Change"
95812>>>>>>>        Else If (iAttrValue = RO_ACCEPTCHANGE) ;            Function_return "Accept Change"
95816>>>>>>>        Else If (iAttrValue = RO_ERRORONCHANGE) ;            Function_return "Error On Change"
95820>>>>>>>    End_Function // RIMValueToText
95821>>>>>>>
95821>>>>>>>
95821>>>>>>>
95821>>>>>>>    //***
95821>>>>>>>    //*** Function: LastDriverError
95821>>>>>>>    //*** Purpose : Return the text f the last error geneated by the driver.
95821>>>>>>>    //***
95821>>>>>>>
95821>>>>>>>    Function LastDriverError Returns String
95823>>>>>>>        Local String  sDriverID
95823>>>>>>>        Local String  sLastError
95823>>>>>>>        Local String  sLastErrorLength
95823>>>>>>>        Local Integer iLastErrorLength
95823>>>>>>>        Local Integer iVoid
95823>>>>>>>
95823>>>>>>>        //*** Initialize
95823>>>>>>>        Move "" To sLastError
95824>>>>>>>
95824>>>>>>>        Get psDriverID To sDriverID
95825>>>>>>>        If (sDriverID <> "") Begin
95827>>>>>>>            //*** Get the text of the last error
95827>>>>>>>            Move (Repeat(Character(" "), 14)) To sLastErrorlength
95828>>>>>>>            Call_driver 0 sDriverID Function CLI_GETDRIVERATTRIBUTE Callback 0 Passing sLastErrorLength iVoid DRVR_LASTERRORTEXTLENGTH Result iVoid
95833>>>>>>>            Move (Left(sLastErrorLength, Pos(Character(0), sLastErrorLength) - 1)) To iLastErrorLength
95834>>>>>>>
95834>>>>>>>            If (iLastErrorLength > 0) Begin
95836>>>>>>>                Move (Repeat(Character(" "), iLastErrorLength + 1)) To sLastError
95837>>>>>>>                Call_driver 0 sDriverID Function CLI_GETDRIVERATTRIBUTE Callback 0 Passing sLastError iVoid DRVR_LASTERRORTEXT Result iVoid
95842>>>>>>>                Move (Left(sLastError, Pos(Character(0), sLastError) - 1)) To sLastError
95843>>>>>>>            End
95843>>>>>>>>
95843>>>>>>>        End
95843>>>>>>>>
95843>>>>>>>
95843>>>>>>>        Function_Return sLastError
95844>>>>>>>    End_Function // LastDriverError
95845>>>>>>>
95845>>>>>>>
95845>>>>>>>
95845>>>>>>>    //***
95845>>>>>>>    //*** Function: EnumerateTables
95845>>>>>>>    //*** Purpose : Enumerate the tables in a database
95845>>>>>>>    //***
95845>>>>>>>
95845>>>>>>>    Function EnumerateTables String sLogin Returns Integer
95847>>>>>>>        Local String  sDriver
95847>>>>>>>        Local String  sVoid
95847>>>>>>>        Local Integer iNumTables
95847>>>>>>>        Local Integer iVoid
95847>>>>>>>
95847>>>>>>>        Get psDriverID To sDriver
95848>>>>>>>        If (sDriver <> "") ;            Call_driver 0 sDriver Function CLI_ENUMERATE_TABLES Callback 0 Passing sLogin sVoid iVoid Result iNumTables
95855>>>>>>>
95855>>>>>>>        Function_Return iNumTables
95856>>>>>>>    End_Function // EnumerateTables
95857>>>>>>>
95857>>>>>>>
95857>>>>>>>
95857>>>>>>>    //***
95857>>>>>>>    //*** Function: TableName
95857>>>>>>>    //*** Purpose : Returns the name of the table enumerated at the given position
95857>>>>>>>    //***
95857>>>>>>>
95857>>>>>>>    Function TableName Integer iIndex Returns String
95859>>>>>>>        Local String  sDriver
95859>>>>>>>        Local String  sTableName
95859>>>>>>>        Local String  sVoid
95859>>>>>>>        Local Integer iVoid
95859>>>>>>>
95859>>>>>>>        Get psDriverID To sDriver
95860>>>>>>>        If (sDriver <> "") Begin
95862>>>>>>>            Move (Repeat(" ", 255)) To sTableName
95863>>>>>>>            Call_driver 0 sDriver Function CLI_TABLENAME Callback 0 Passing sTableName sVoid iIndex Result iVoid
95868>>>>>>>        End
95868>>>>>>>>
95868>>>>>>>
95868>>>>>>>        Function_Return sTableName
95869>>>>>>>    End_Function // TableName
95870>>>>>>>
95870>>>>>>>
95870>>>>>>>
95870>>>>>>>    //***
95870>>>>>>>    //*** Function: SchemaName
95870>>>>>>>    //*** Purpose : Returns the name of the schema of the table enumerated at the given position
95870>>>>>>>    //***
95870>>>>>>>
95870>>>>>>>    Function SchemaName Integer iIndex Returns String
95872>>>>>>>        Local String  sDriver
95872>>>>>>>        Local String  sSchemaName
95872>>>>>>>        Local String  sVoid
95872>>>>>>>        Local Integer iVoid
95872>>>>>>>
95872>>>>>>>        Get psDriverID To sDriver
95873>>>>>>>        If (sDriver <> "") Begin
95875>>>>>>>            Move (Repeat(" ", 255)) To sSchemaName
95876>>>>>>>            Call_driver 0 sDriver Function CLI_TABLESCHEMA Callback 0 Passing sSchemaName sVoid iIndex Result iVoid
95881>>>>>>>        End
95881>>>>>>>>
95881>>>>>>>
95881>>>>>>>        Function_Return sSchemaName
95882>>>>>>>    End_Function // SchemaName
95883>>>>>>>
95883>>>>>>>
95883>>>>>>>
95883>>>>>>>    //***
95883>>>>>>>    //*** Function: TableType
95883>>>>>>>    //*** Purpose : Returns the type of the table enumerated at the given position.
95883>>>>>>>    //***           Types can be "TABLE", "VIEW", "SYSTEM TABLE", "GLOBAL TEMPORARY",
95883>>>>>>>    //***           "LOCAL TEMPORARY", "ALIAS", "SYNONYM"
95883>>>>>>>    //***
95883>>>>>>>
95883>>>>>>>    Function TableType Integer iIndex Returns String
95885>>>>>>>        Local String  sDriver
95885>>>>>>>        Local String  sTableType
95885>>>>>>>        Local String  sVoid
95885>>>>>>>        Local Integer iVoid
95885>>>>>>>
95885>>>>>>>        Get psDriverID To sDriver
95886>>>>>>>        If (sDriver <> "") Begin
95888>>>>>>>            Move (Repeat(" ", 25)) To sTableType
95889>>>>>>>            Call_driver 0 sDriver Function CLI_TABLETYPE Callback 0 Passing sTableType sVoid iIndex Result iVoid
95894>>>>>>>        End
95894>>>>>>>>
95894>>>>>>>
95894>>>>>>>        Function_Return sTableType
95895>>>>>>>    End_Function // TableType
95896>>>>>>>
95896>>>>>>>
95896>>>>>>>
95896>>>>>>>    //***
95896>>>>>>>    //*** Function: TableComment
95896>>>>>>>    //*** Purpose : Returns the comment of the table enumerated at the given position
95896>>>>>>>    //***
95896>>>>>>>
95896>>>>>>>    Function TableComment Integer iIndex Returns String
95898>>>>>>>        Local String  sDriver
95898>>>>>>>        Local String  sTableComment
95898>>>>>>>        Local String  sVoid
95898>>>>>>>        Local Integer iVoid
95898>>>>>>>
95898>>>>>>>        Get psDriverID To sDriver
95899>>>>>>>        If (sDriver <> "") Begin
95901>>>>>>>            Move (Repeat(" ", 255)) To sTableComment
95902>>>>>>>            Call_driver 0 sDriver Function CLI_TABLECOMMENT Callback 0 Passing sTableComment sVoid iIndex Result iVoid
95907>>>>>>>        End
95907>>>>>>>>
95907>>>>>>>
95907>>>>>>>        Function_Return sTableComment
95908>>>>>>>    End_Function // TableComment
95909>>>>>>>
95909>>>>>>>
95909>>>>>>>
95909>>>>>>>    //***
95909>>>>>>>    //*** Function: EnumerateColumns
95909>>>>>>>    //*** Purpose : Enumerate the columns in a table
95909>>>>>>>    //***
95909>>>>>>>
95909>>>>>>>    Function EnumerateColumns String sLogin String sTableName Returns Integer
95911>>>>>>>        Local String  sDriver
95911>>>>>>>        Local Integer iNumColumns
95911>>>>>>>        Local Integer iVoid
95911>>>>>>>
95911>>>>>>>        Get psDriverID To sDriver
95912>>>>>>>        If (sDriver <> "") ;            Call_driver 0 sDriver Function CLI_ENUMERATE_COLUMNS Callback 0 Passing sLogin sTablename iVoid Result iNumColumns
95919>>>>>>>
95919>>>>>>>        Function_Return iNumColumns
95920>>>>>>>    End_Function // EnumerateColumns
95921>>>>>>>
95921>>>>>>>
95921>>>>>>>
95921>>>>>>>    //***
95921>>>>>>>    //*** Function: ColumnName
95921>>>>>>>    //*** Purpose : Returns the name of the column enumerated at the given position
95921>>>>>>>    //***
95921>>>>>>>
95921>>>>>>>    Function ColumnName Integer iIndex Returns String
95923>>>>>>>        Local String  sDriver
95923>>>>>>>        Local String  sColumnName
95923>>>>>>>        Local String  sVoid
95923>>>>>>>        Local Integer iVoid
95923>>>>>>>
95923>>>>>>>        Get psDriverID To sDriver
95924>>>>>>>        If (sDriver <> "") Begin
95926>>>>>>>            Move (Repeat(" ", 255)) To sColumnName
95927>>>>>>>            Call_driver 0 sDriver Function CLI_COLUMNNAME Callback 0 Passing sColumnName sVoid iIndex Result iVoid
95932>>>>>>>        End
95932>>>>>>>>
95932>>>>>>>
95932>>>>>>>        Function_Return sColumnName
95933>>>>>>>    End_Function // ColumnName
95934>>>>>>>
95934>>>>>>>
95934>>>>>>>
95934>>>>>>>    //***
95934>>>>>>>    //*** Function: CLIDFDateToSQLDate
95934>>>>>>>    //*** Purpose : Convert a DataFlex date to a SQL date using the dummy zero date value.
95934>>>>>>>    //***
95934>>>>>>>
95934>>>>>>>    Function CLIDFDateToSQLDate String sDRiver Date dDFDate Returns String
95936>>>>>>>        Local String sSQLDate
95936>>>>>>>        Local Integer iOrgDateFmt
95936>>>>>>>        Local Integer iOrgDateSep
95936>>>>>>>
95936>>>>>>>        //*** Change date format to military, SQL dates are military dates
95936>>>>>>>        Get_Attribute DF_DATE_FORMAT To iOrgDateFmt
95939>>>>>>>        Get_Attribute DF_DATE_SEPARATOR To iOrgDateSep
95942>>>>>>>        Set_Attribute DF_DATE_FORMAT To DF_DATE_MILITARY
95945>>>>>>>        Set_Attribute DF_DATE_SEPARATOR To (Ascii('-'))
95948>>>>>>>
95948>>>>>>>        //*** We only need to convert if the date is 0
95948>>>>>>>        If (Integer(dDFDate = 0)) ;            CLI_Get_Driver_Attribute sDRiver DRVR_DUMMY_ZERO_DATE_VALUE To sSQLDate
95957>>>>>>>        Else ;            Move dDFDate To sSQLDate
95959>>>>>>>
95959>>>>>>>        //*** Change date format back to original
95959>>>>>>>        Set_Attribute DF_DATE_FORMAT To iOrgDateFmt
95962>>>>>>>        Set_Attribute DF_DATE_SEPARATOR To iOrgDateSep
95965>>>>>>>
95965>>>>>>>        Function_Return sSQLDate
95966>>>>>>>    End_Function // CLIDFDateToSQLDate
95967>>>>>>>
95967>>>>>>>
95967>>>>>>>
95967>>>>>>>    //***
95967>>>>>>>    //*** Function: CLISQLDateToDFDate
95967>>>>>>>    //*** Purpose : Convert a SQL date to a DataFlex date using the dummy zero date value.
95967>>>>>>>    //***
95967>>>>>>>
95967>>>>>>>    Function CLISQLDateToDFDate String sDRiver String sSQLDate Returns Date
95969>>>>>>>        Local Date dDFDate
95969>>>>>>>        Local String sDummyDateValue
95969>>>>>>>        Local Integer iOrgDateFmt
95969>>>>>>>        Local Integer iOrgDateSep
95969>>>>>>>
95969>>>>>>>        //*** Change date format to military, SQL dates are military dates
95969>>>>>>>        Get_Attribute DF_DATE_FORMAT To iOrgDateFmt
95972>>>>>>>        Get_Attribute DF_DATE_SEPARATOR To iOrgDateSep
95975>>>>>>>        Set_Attribute DF_DATE_FORMAT To DF_DATE_MILITARY
95978>>>>>>>        Set_Attribute DF_DATE_SEPARATOR To (Ascii('-'))
95981>>>>>>>
95981>>>>>>>        //*** We only need to convert if the date is the dummy zero date value
95981>>>>>>>        CLI_Get_Driver_Attribute sDRiver DRVR_DUMMY_ZERO_DATE_VALUE To sDummyDateValue
95988>>>>>>>        If (sDummyDateValue = sSQLDate) ;            Move 0 To dDFDate
95991>>>>>>>        Else ;            Move sSQLDate To dDFDate
95993>>>>>>>
95993>>>>>>>        //*** Change date format back to original
95993>>>>>>>        Set_Attribute DF_DATE_FORMAT To iOrgDateFmt
95996>>>>>>>        Set_Attribute DF_DATE_SEPARATOR To iOrgDateSep
95999>>>>>>>
95999>>>>>>>        Function_Return dDFDate
96000>>>>>>>    End_Function // CLISQLDateToDFDate
96001>>>>>>>
96001>>>>>>>
96001>>>>>>>
96001>>>>>>>    //***
96001>>>>>>>    //*** Function: RedirectConnection
96001>>>>>>>    //*** Purpose : Redirect an exisitng connection. The existing connection
96001>>>>>>>    //***           will point to another database but all tables will stay
96001>>>>>>>    //***           open!
96001>>>>>>>    //***
96001>>>>>>>
96001>>>>>>>    Function RedirectConnection String sOldConnection String sNewConnection Returns Integer
96003>>>>>>>        Local String  sDriver
96003>>>>>>>        Local String  sVoid
96003>>>>>>>        Local Integer iResult
96003>>>>>>>        Local Integer iVoid
96003>>>>>>>
96003>>>>>>>        Get psDriverID To sDriver
96004>>>>>>>        If (sDriver <> "") Begin
96006>>>>>>>            Call_driver 0 sDriver Function CLI_REDIRECTCONNECTION Callback 0 Passing sOldConnection sNewConnection iVoid Result iResult
96011>>>>>>>        End
96011>>>>>>>>
96011>>>>>>>        Function_Return iResult
96012>>>>>>>    End_Function // RedirectConnect
96013>>>>>>>
96013>>>>>>>
96013>>>>>>>
96013>>>>>>>    //***
96013>>>>>>>    //*** Function: CreateConnectionID
96013>>>>>>>    //*** Purpose : Create a DataFlex side connection id that can be used later on.
96013>>>>>>>    //***
96013>>>>>>>
96013>>>>>>>    Function CreateConnectionID String sID String sConnStr Integer iOpt Returns Integer
96015>>>>>>>        Local String  sDriver
96015>>>>>>>        Local Integer iResult
96015>>>>>>>        Local Integer iOptions
96015>>>>>>>
96015>>>>>>>        Get psDriverID to sDriver
96016>>>>>>>        If (Num_Arguments = 2) ;            Move 0 to iOptions
96019>>>>>>>        Else ;            Move iOpt to iOptions
96021>>>>>>>        If (sDriver <> "") Begin
96023>>>>>>>            Call_Driver 0 sDriver Function CLI_CREATECONNECTIONID Callback 0 Passing sID sConnStr iOptions Result iResult
96028>>>>>>>        End
96028>>>>>>>>
96028>>>>>>>        Function_Return iResult
96029>>>>>>>    End_Function // CreateConnectionID
96030>>>>>>>
96030>>>>>>>
96030>>>>>>>
96030>>>>>>>    //***
96030>>>>>>>    //*** Function: DeleteConnectionID
96030>>>>>>>    //*** Purpose : Delete a DataFlex side connection id.
96030>>>>>>>    //***
96030>>>>>>>
96030>>>>>>>    Function DeleteConnectionID String sID Integer iIndex Returns Integer
96032>>>>>>>        Local String  sDriver
96032>>>>>>>        Local Integer iResult
96032>>>>>>>        Local String sVoid
96032>>>>>>>
96032>>>>>>>        Get psDriverID To sDriver
96033>>>>>>>        If (sDriver <> "") Begin
96035>>>>>>>            Call_Driver 0 sDriver Function CLI_DELETECONNECTIONID Callback 0 Passing sID sVoid iIndex Result iResult
96040>>>>>>>        End
96040>>>>>>>>
96040>>>>>>>        Function_Return iResult
96041>>>>>>>    End_Function // DeleteConnectionID
96042>>>>>>>
96042>>>>>>>End_Class // cCLIHandler
96043>>>>>
96043>>>>>External_Function WNetGetUser "WNetGetUserA" MPR.DLL Pointer lpName Pointer lpUser_Name Pointer lpLength Returns DWord
96044>>>>>
96044>>>>>Register_Function phoWorkspace Returns Handle
96044>>>>>Register_Function Help_filename Returns String
96044>>>>>Register_Function GetHelpFile Returns String
96044>>>>>Register_Function pbEnterKeyAsTabKey Returns Boolean
96044>>>>>
96044>>>>>//****************************************************************************
96044>>>>>// $Module type: FUNCTION
96044>>>>>// $Module name: Network_User_Name
96044>>>>>// $Author     : AK/VOO/KCR
96044>>>>>// Created     : 09-24-96 @ 19:17
96044>>>>>//
96044>>>>>// Description
96044>>>>>//    This function reads the current username Of windows and returns that
96044>>>>>//    name or an text unknown user
96044>>>>>//
96044>>>>>// $Rev History
96044>>>>>//  02/22/2012  Ask Windows how long the size of the name should be
96044>>>>>//  07/25/2003  Replaced obsolete code
96044>>>>>//  09/24/1996  Module header created
96044>>>>>//****************************************************************************
96044>>>>>Function Network_User_Name for cDesktop Returns String
96046>>>>>    String sName
96046>>>>>    Integer iRetval iLength
96046>>>>>
96046>>>>>    Move 0 to iLength
96047>>>>>    Move (WNetGetUser (0, 0, AddressOf (iLength))) to iRetval
96048>>>>>    ZeroString iLength to sName
96049>>>>>    Move (WNetGetUser (0, AddressOf (sName), AddressOf (iLength))) to iRetval
96050>>>>>
96050>>>>>    If (iRetval = NO_ERROR) Begin
96052>>>>>        Function_Return (CString (sName))
96053>>>>>    End
96053>>>>>>
96053>>>>>    
96053>>>>>    Function_Return "User Unknown"
96054>>>>>End_Function
96055>>>>>
96055>>>>>// OBSOLETE STRUCTURE AND WINDOWS API CALL. KEPT FOR BACKWARDS COMPATIBILITY
96055>>>>>Type MEMORYSTATUS
96055>>>>>   Field MEMORYSTATUS.dwLength         as DWord // sizeof(MEMORYSTATUS)
96055>>>>>   Field MEMORYSTATUS.dwMemoryLoad     as DWord // percent Of memory in use
96055>>>>>   Field MEMORYSTATUS.dwTotalPhys      as DWord // bytes Of physical memory
96055>>>>>   Field MEMORYSTATUS.dwAvailPhys      as DWord // free physical memory bytes
96055>>>>>   Field MEMORYSTATUS.dwTotalPageFile  as DWord // bytes Of paging file
96055>>>>>   Field MEMORYSTATUS.dwAvailPageFile  as DWord // free bytes Of paging file
96055>>>>>   Field MEMORYSTATUS.dwTotalVirtual   as DWord // user bytes Of address space
96055>>>>>   Field MEMORYSTATUS.dwAvailVirtual   as DWord // free user bytes
96055>>>>>End_Type // MEMORYSTATUS
96055>>>>>
96055>>>>>External_Function GlobalMemoryStatus "GlobalMemoryStatus" Kernel32.Dll Pointer lpsMemoryStatus Returns Integer
96056>>>>>
96056>>>>>Struct tWinMemoryStatusEx
96056>>>>>    UInteger dwLength                
96056>>>>>    UInteger dwMemoryLoad          
96056>>>>>    UBigInt ullTotalPhys           
96056>>>>>    UBigInt ullAvailPhys           
96056>>>>>    UBigInt ullTotalPageFile       
96056>>>>>    UBigInt ullAvailPageFile       
96056>>>>>    UBigInt ullTotalVirtual        
96056>>>>>    UBigInt ullAvailVirtual        
96056>>>>>    UBigInt ullAvailExtendedVirtual
96056>>>>>End_Struct
96056>>>>>
96056>>>>>External_Function GlobalMemoryStatusEx "GlobalMemoryStatusEx" Kernel32.Dll Pointer lpMemoryStatus Returns Integer
96057>>>>>
96057>>>>>Class SysinfoDisplay is a cTextEdit
96058>>>>>    Procedure Construct_Object
96060>>>>>        Forward Send Construct_Object
96062>>>>>
96062>>>>>        Set Location To 6 6
96063>>>>>        Set Size To 110 255
96064>>>>>        Set Read_Only_State To True
96065>>>>>        Set pbWrap to False
96066>>>>>    End_Procedure
96067>>>>>
96067>>>>>    //****************************************************************************
96067>>>>>    // $Module type: PROCEDURE
96067>>>>>    // $Module name: Show_Current_Directory
96067>>>>>    // $Author     : VOO
96067>>>>>    // Created     : 06-10-96 @ 15:24
96067>>>>>    //
96067>>>>>    // Description
96067>>>>>    //    This method will show the name Of the current directory in the system
96067>>>>>    //    information box
96067>>>>>    //
96067>>>>>    // $Rev History
96067>>>>>    //    06-10-96  Module header created
96067>>>>>    //****************************************************************************
96067>>>>>    Procedure Show_Current_Directory
96069>>>>>        String sDir
96069>>>>>
96069>>>>>        Get_Current_Directory To sDir
96070>>>>>
96070>>>>>        Send AppendTextLn (SFormat (C_$CurrentDirectory, sDir))
96071>>>>>    End_Procedure
96072>>>>>
96072>>>>>    Procedure Show_Windows_Directory
96074>>>>>        String sWindir
96074>>>>>
96074>>>>>        Get_Windows_Directory To sWindir
96075>>>>>
96075>>>>>        Send AppendTextLn (SFormat (C_$WindowsDirectory, sWindir))
96076>>>>>    End_Procedure
96077>>>>>
96077>>>>>    Procedure Show_Current_User
96079>>>>>        Send AppendTextLn (SFormat (C_$NetworkUserName, Network_User_Name (Self)))
96080>>>>>    End_Procedure
96081>>>>>
96081>>>>>    Procedure Show_Number_Format
96083>>>>>        Integer iFormat
96083>>>>>        String sFormatText
96083>>>>>
96083>>>>>        Get_Attribute DF_THOUSANDS_SEPARATOR to iFormat
96086>>>>>        Move (Character (iFormat)) To sFormatText
96087>>>>>        Send AppendTextLn (SFormat (C_$ThousandsSeparator, sFormatText, iFormat))
96088>>>>>
96088>>>>>        Get_Attribute DF_DECIMAL_SEPARATOR to iFormat
96091>>>>>        Move (Character (iFormat)) to sFormatText
96092>>>>>        Send AppendTextLn (SFormat (C_$DecimalSeparator, sFormatText))
96093>>>>>    End_Procedure
96094>>>>>
96094>>>>>    Procedure Show_Filelist_Name
96096>>>>>        String sFilename
96096>>>>>
96096>>>>>        Get_Attribute DF_FILELIST_NAME to sFilename
96099>>>>>
96099>>>>>        Send AppendTextLn (SFormat (C_$CurrentFilelist, sFilename))
96100>>>>>    End_Procedure
96101>>>>>
96101>>>>>    Procedure Show_Lock_Delay
96103>>>>>        Integer iLockdelay
96103>>>>>
96103>>>>>        Get_Attribute DF_LOCK_DELAY to iLockdelay
96106>>>>>
96106>>>>>        Send AppendTextLn (SFormat (C_$DatabaseLockingDelay, iLockDelay))
96107>>>>>    End_Procedure
96108>>>>>
96108>>>>>    Procedure Show_Lock_Timeout
96110>>>>>        Integer iLockTimeout
96110>>>>>
96110>>>>>        Get_Attribute DF_LOCK_TIMEOUT to iLockTimeout
96113>>>>>
96113>>>>>        Send AppendTextLn (SFormat (C_$DatabaseLockingTimeout, iLockTimeOut))
96114>>>>>    End_Procedure
96115>>>>>
96115>>>>>    Procedure Show_Screen_Size
96117>>>>>        Integer iYscreensize iXscreensize
96117>>>>>
96117>>>>>        Move (GetSystemMetrics (SM_CXSCREEN)) To iXscreensize
96118>>>>>        Move (GetSystemMetrics (SM_CYSCREEN)) To iYscreensize
96119>>>>>
96119>>>>>        Send AppendTextLn (SFormat (C_$VideoResolution, iXscreensize, iYscreensize))
96120>>>>>    End_Procedure
96121>>>>>
96121>>>>>    Procedure Show_Page_Size
96123>>>>>        Send AppendTextLn (SFormat (C_$PageEndFormFeed, Pageend, Pagefeed))
96124>>>>>    End_procedure
96125>>>>>
96125>>>>>    Procedure Show_Date
96127>>>>>        Date dToday
96127>>>>>
96127>>>>>        Sysdate dToday
96128>>>>>
96128>>>>>        Send AppendTextLn (SFormat (C_$CurrentSystemDate, String (dToday)))
96129>>>>>    End_procedure
96130>>>>>
96130>>>>>    Procedure Show_Date_Format
96132>>>>>        Integer iDateFormat
96132>>>>>        String sDateFormat
96132>>>>>
96132>>>>>        Get_Attribute DF_DATE_FORMAT to iDateFormat
96135>>>>>        Case Begin
96135>>>>>            Case (iDateFormat = DF_DATE_USA)
96137>>>>>                Move C_$USA To sDateFormat
96138>>>>>                Case Break
96139>>>>>            Case (iDateFormat = DF_DATE_EUROPEAN)
96142>>>>>                Move C_$European To sDateFormat
96143>>>>>                Case Break
96144>>>>>            Case (iDateFormat = DF_DATE_MILITARY)
96147>>>>>                Move C_$Military To sDateFormat
96148>>>>>                Case Break
96149>>>>>            Case Else
96149>>>>>                Move C_$UnknownDateType To sDateFormat
96150>>>>>                Case Break
96151>>>>>        Case End
96151>>>>>
96151>>>>>        Send AppendTextLn (SFormat (C_$DateFormat, sDateformat))
96152>>>>>    End_Procedure
96153>>>>>
96153>>>>>    Procedure Show_Systemresources
96155>>>>>        tWinMemoryStatusEx MemoryStatusInfo
96155>>>>>        tWinMemoryStatusEx MemoryStatusInfo
96155>>>>>        Integer iRetval
96155>>>>>
96155>>>>>        Move (SizeOfType (tWinMemoryStatusEx)) to MemoryStatusInfo.dwLength
96156>>>>>        Move (GlobalMemoryStatusEx (AddressOf (MemoryStatusInfo))) to iRetval
96157>>>>>        If (iRetval = 0) Begin
96159>>>>>            Move (ShowLastError ()) to iRetval
96160>>>>>        End
96160>>>>>>
96160>>>>>
96160>>>>>        Send AppendTextLn (SFormat (C_$AvailableMemory, MemoryStatusInfo.ullTotalPhys))
96161>>>>>        Send AppendTextLn (SFormat (C_$MemoryUtilization, MemoryStatusInfo.dwMemoryLoad))
96162>>>>>        Send AppendTextLn (SFormat (C_$AvailablePhysicalMemory, Real (MemoryStatusInfo.ullAvailPhys) / Real (MemoryStatusInfo.ullTotalPhys) * 100.0))
96163>>>>>        Send AppendTextLn (SFormat (C_$AvailablePagefileSpace, Real (MemoryStatusInfo.ullAvailPageFile) / Real (MemoryStatusInfo.ullTotalPageFile) * 100.0))
96164>>>>>        Send AppendTextLn (SFormat (C_$AvailableVirtualMemory, Real (MemoryStatusInfo.ullAvailVirtual) / Real (MemoryStatusInfo.ullTotalVirtual) * 100.0))
96165>>>>>    End_Procedure
96166>>>>>
96166>>>>>    Procedure Show_Registration
96168>>>>>        String sRegName
96168>>>>>        Integer iSN iMaxUsers
96168>>>>>
96168>>>>>        Registration sRegName iSN
96169>>>>>>
96169>>>>>        
96169>>>>>        Get_Licensed_Max_Users to iMaxUsers
96170>>>>>
96170>>>>>        Send AppendTextLn ""
96171>>>>>        Send AppendTextLn (SFormat (C_$Serial, iSN))
96172>>>>>        Send AppendTextLn (SFormat (C_$RegName, sRegName))
96173>>>>>        Send AppendTextLn (SFormat (C_$MaxNumUsers, iMaxUsers))
96174>>>>>    End_Procedure
96175>>>>>
96175>>>>>    //****************************************************************************
96175>>>>>    // If workspaces are used, we will send the message EnumerateWorkspaceData
96175>>>>>    // To the workspace object passing the an object and message To send back
96175>>>>>    // To this object. It is expected that the workspace object will send this
96175>>>>>    // message for every line Of information it wants displayed (passing the
96175>>>>>    // information To be displayed
96175>>>>>    //****************************************************************************
96175>>>>>    Register_Procedure EnumerateWorkspaceData Integer hObjId Integer hmMessId
96175>>>>>
96175>>>>>    Procedure Show_ServicePack
96177>>>>>        String sKey sVersionDescription sVersion 
96177>>>>>        Handle hoRegistry
96177>>>>>        Boolean bExists bOpened
96177>>>>>        
96177>>>>>        Get Create (RefClass (cRegistry)) to hoRegistry
96178>>>>>        Set phRootKey of hoRegistry to HKEY_LOCAL_MACHINE
96179>>>>>        Set pfAccessRights of hoRegistry to KEY_READ
96180>>>>>
96180>>>>>        Move ("SOFTWARE\Data Access Worldwide\Visual DataFlex\" + SysConf (SYSCONF_DATAFLEX_REV)) to sKey
96181>>>>>        Get KeyExists of hoRegistry sKey to bExists
96182>>>>>        If (bExists) Begin
96184>>>>>            Get OpenKey of hoRegistry sKey to bOpened
96185>>>>>            If (bOpened) Begin
96187>>>>>                Get ValueExists of hoRegistry "CurrentVersionDescription" to bExists
96188>>>>>                If (bExists) Begin
96190>>>>>                    Get ReadString of hoRegistry "CurrentVersionDescription" to sVersionDescription
96191>>>>>                End
96191>>>>>>
96191>>>>>                
96191>>>>>                Get ValueExists of hoRegistry "CurrentVersion" to bExists
96192>>>>>                If (bExists) Begin
96194>>>>>                    Get ReadString of hoRegistry "CurrentVersion" to sVersion
96195>>>>>                End                
96195>>>>>>
96195>>>>>                Send CloseKey of hoRegistry
96196>>>>>            End
96196>>>>>>
96196>>>>>        End
96196>>>>>>
96196>>>>>        Send Destroy of hoRegistry
96197>>>>>
96197>>>>>        If (sVersionDescription <> "") Begin
96199>>>>>           Send AppendTextLn (sVersionDescription * "-" * sVersion)
96200>>>>>           Send AppendTextLn ""
96201>>>>>        End
96201>>>>>>
96201>>>>>    End_Procedure
96202>>>>>
96202>>>>>    Procedure Show_WorkspaceInformation
96204>>>>>        Integer hoWorkspace
96204>>>>>
96204>>>>>        If (ghoApplication <> 0) Begin
96206>>>>>            Get phoWorkspace of ghoApplication to hoWorkspace
96207>>>>>            If (hoWorkspace <> 0) Begin
96209>>>>>                Send EnumerateWorkspaceData of hoWorkspace Self (Refproc (AppendTextLn))
96210>>>>>            End
96210>>>>>>
96210>>>>>        End
96210>>>>>>
96210>>>>>    End_Procedure
96211>>>>>
96211>>>>>    Function VersionStr Integer iVer Integer iRev Integer iBld Returns String
96213>>>>>        Function_Return (String (iVer) - "." - String (iRev) - "." - String (iBld))
96214>>>>>    End_Function
96215>>>>>
96215>>>>>    Procedure Show_Versions
96217>>>>>        Integer iVersion iRevision iBuild
96217>>>>>
96217>>>>>        Version_information iVersion iRevision iBuild
96219>>>>>
96219>>>>>        Send AppendTextLn (SFormat (C_$RuntimeVersion, VersionStr(Self,iVersion,iRevision,iBuild) ))
96220>>>>>        Send AppendTextLn (SFormat (C_$PackageVersion, VersionStr(Self,PKG_VERSION, PKG_REVISION, PKG_BUILD) ))
96221>>>>>        Send AppendTextLn (SFormat (C_$FMACVersion, VersionStr(Self,FMAC_VERSION, FMAC_REVISION, FMAC_BUILD) ))
96222>>>>>    End_Procedure
96223>>>>>    
96223>>>>>    Function CKRevisionNumber String sDriverID Returns String
96225>>>>>        Handle hoCLIHandler
96225>>>>>        String sCKRevision
96225>>>>>    
96225>>>>>        Get Create (RefClass(cCLIHandler)) to hoCLIHandler
96226>>>>>        Set psDriverID of hoCLIHandler to sDriverID
96227>>>>>        Move (CKRevision(hoCLIHandler)) to sCKRevision
96228>>>>>        Send Destroy of hoCLIHandler
96229>>>>>        
96229>>>>>        Function_Return sCKRevision
96230>>>>>    End_Function
96231>>>>>    
96231>>>>>    
96231>>>>>    Function IsDataAccessCK String sDriverID Returns Boolean
96233>>>>>        
96233>>>>>        If (sDriverID = "DATAFLEX") Begin
96235>>>>>            Function_Return False
96236>>>>>        End
96236>>>>>>
96236>>>>>    
96236>>>>>        Function_Return (sDriverID = "MSSQLDRV" or sDriverID = "ODBC_DRV" or sDriverID = "DB2_DRV" or sDriverID = "DFBTRDRV")
96237>>>>>    End_Function    
96238>>>>>
96238>>>>>
96238>>>>>    //***
96238>>>>>    //*** BW
96238>>>>>    //*** Procedure: Show_Drivers
96238>>>>>    //*** Purpose  : Show loaded database drivers
96238>>>>>    //***
96238>>>>>
96238>>>>>    Procedure Show_Drivers
96240>>>>>        String sCurrentDriver sRevNumber
96240>>>>>        String sLoadedDrivers
96240>>>>>        Integer iNumberOfDrivers iCount
96240>>>>>        Boolean bOK
96240>>>>>
96240>>>>>        Move "" To sLoadedDrivers
96241>>>>>        Get_Attribute DF_NUMBER_DRIVERS To iNumberOfDrivers
96244>>>>>        For iCount From 1 To iNumberOfDrivers
96250>>>>>>
96250>>>>>            Get_Attribute DF_DRIVER_NAME Of iCount To sCurrentDriver
96253>>>>>            If (sLoadedDrivers <> "") Begin
96255>>>>>                Move (Append (sLoadedDrivers, ", ")) To sLoadedDrivers
96256>>>>>            End
96256>>>>>>
96256>>>>>            Get IsDataAccessCK sCurrentDriver to bOK
96257>>>>>            If (bOK) Begin
96259>>>>>                Get CKRevisionNumber sCurrentDriver to sRevNumber
96260>>>>>                Move (sCurrentDriver * "(" + sRevNumber + ")") to sCurrentDriver
96261>>>>>            End
96261>>>>>>
96261>>>>>            Move (Append (sLoadedDrivers, sCurrentDriver)) To sLoadedDrivers
96262>>>>>        Loop
96263>>>>>>
96263>>>>>        Send AppendTextLn (SFormat (C_$DatabaseDriver, sLoadedDrivers))
96264>>>>>    End_Procedure
96265>>>>>
96265>>>>>    Procedure Show_HelpFile
96267>>>>>        String sHelpFile
96267>>>>>        Integer eHelpType
96267>>>>>
96267>>>>>        If (ghoApplication <> 0) Begin
96269>>>>>            Get peHelpType Of ghoApplication To eHelpType
96270>>>>>            If (eHelpType = htHtmlHelp and ghoHtmlHelp) Begin
96272>>>>>                Get GetHelpFile Of ghoHtmlHelp To sHelpFile
96273>>>>>            End
96273>>>>>>
96273>>>>>            Else If (eHelpType = htWinHelp and Help_object_id) Begin
96276>>>>>                Get Help_filename Of Help_object_id To sHelpFile
96277>>>>>            End
96277>>>>>>
96277>>>>>            Else Begin
96278>>>>>                Move C_$ThereIsNoHelpfileDefined To sHelpFile
96279>>>>>            End
96279>>>>>>
96279>>>>>
96279>>>>>            Send AppendTextLn ""
96280>>>>>            Send AppendTextLn (SFormat (C_$HelpFile, sHelpFile))
96281>>>>>        End
96281>>>>>>
96281>>>>>    End_Procedure
96282>>>>>
96282>>>>>    Procedure Show_EnterAsTab
96284>>>>>        Boolean bEnterKeyAsTabKey
96284>>>>>        String sText
96284>>>>>
96284>>>>>        If (ghoApplication <> 0) Begin
96286>>>>>            Get pbEnterKeyAsTabKey Of ghoApplication To bEnterKeyAsTabKey
96287>>>>>            If (bEnterKeyAsTabKey) Begin
96289>>>>>                Move "True" To sText
96290>>>>>            End
96290>>>>>>
96290>>>>>            Else Begin
96291>>>>>                Move "False" To sText
96292>>>>>            End
96292>>>>>>
96292>>>>>            Send AppendTextLn (SFormat (C_$EnterKeyNavForward, sText))
96293>>>>>        End
96293>>>>>>
96293>>>>>    End_Procedure
96294>>>>>
96294>>>>>    //****************************************************************************
96294>>>>>    // $Module type: PROCEDURE
96294>>>>>    // $Module name: Add_Focus
96294>>>>>    // $Author     : VOO
96294>>>>>    // Created     : 24-09-96 @ 19:43
96294>>>>>    //
96294>>>>>    // Description
96294>>>>>    //    During activation we will remove the old information and add the newly
96294>>>>>    //    found systeminformation
96294>>>>>    //
96294>>>>>    // $Rev History
96294>>>>>    //    24-09-96  Module header created
96294>>>>>    //****************************************************************************
96294>>>>>    Procedure Add_Focus Integer hoRoot
96296>>>>>        Forward Send Add_Focus hoRoot
96298>>>>>
96298>>>>>        Send Delete_Data
96299>>>>>
96299>>>>>        Set Changed_State To False
96300>>>>>        Set Read_Only_State To True
96301>>>>>
96301>>>>>        Send Show_ServicePack
96302>>>>>        If (ghoApplication <> 0) Begin
96304>>>>>            Send Show_WorkSpaceInformation // added To show WS info
96305>>>>>            Send Show_HelpFile
96306>>>>>            Send Show_EnterAsTab
96307>>>>>        End
96307>>>>>>
96307>>>>>        Send Show_Drivers
96308>>>>>        Send Show_Current_User
96309>>>>>        Send Show_Windows_Directory
96310>>>>>        Send Show_Current_Directory
96311>>>>>        Send Show_Filelist_Name
96312>>>>>        Send Show_Versions
96313>>>>>        Send Show_Screen_Size
96314>>>>>        Send Show_Page_Size
96315>>>>>        Send Show_Number_Format
96316>>>>>        Send Show_Date_Format
96317>>>>>        Send Show_Lock_Delay
96318>>>>>        Send Show_Lock_Timeout
96319>>>>>        Send Show_Date
96320>>>>>        Send Show_Systemresources
96321>>>>>        Send Show_Registration
96322>>>>>        Send Beginning_of_Data
96323>>>>>
96323>>>>>        Set Icon to 'default.ico'
96324>>>>>    End_Procedure
96325>>>>>End_Class
96326>>>>>
96326>>>>>//****************************************************************************
96326>>>>>// $Module type: OBJECT
96326>>>>>// $Module name: Sysinfo_Dialog
96326>>>>>// $Author     : VOO
96326>>>>>// Created     : 24-09-96 @ 18:47
96326>>>>>//
96326>>>>>// Description
96326>>>>>//    This object shows the systeminformation on the screen
96326>>>>>//
96326>>>>>// $Rev History
96326>>>>>//    24-09-96  Module header created
96326>>>>>//****************************************************************************
96326>>>>>Class SysInfoDialog Is A ModalPanel
96327>>>>>    Procedure Construct_Object
96329>>>>>        Forward Send Construct_Object
96331>>>>>
96331>>>>>        Set Label to C_$SystemInformation
96332>>>>>        Set Size to 140 267
96333>>>>>        Set piMinSize to 140 267
96334>>>>>        Set Locate_Mode To CENTER_ON_SCREEN
96335>>>>>        Set Border_Style to Border_Thick
96336>>>>>
96336>>>>>        Object oSysinfoDisplay Is A SysInfoDisplay
96338>>>>>            Set peAnchors to anAll
96339>>>>>        End_Object
96340>>>>>
96340>>>>>        Object oCloseButton Is A Button
96342>>>>>            Set Label To C_$Close
96343>>>>>            Set Location To 120 210
96344>>>>>            Set Message Item 0 To (Refproc (Close_Panel))
96345>>>>>            Set Default_State To True
96346>>>>>            Set peAnchors to anBottomRight
96347>>>>>        End_Object
96348>>>>>
96348>>>>>        On_Key kCancel Send Close_Panel
96349>>>>>    End_Procedure
96350>>>>>End_Class
96351>>>>>
96351>>>>>// Purpose:
96351>>>>>//
96351>>>>>// Ken Ross 12/17/96 5:16PM
96351>>>>>//
96351>>>>>Class AboutDialog Is A ModalPanel
96352>>>>>    Procedure Construct_Object
96354>>>>>        String sVdfRootDir
96354>>>>>
96354>>>>>        Forward Send Construct_Object
96356>>>>>
96356>>>>>        Set Label To C_$About
96357>>>>>        Set Size to 89 212
96358>>>>>        Set Locate_Mode To CENTER_ON_SCREEN
96359>>>>>
96359>>>>>        Object oSysInfoDialog Is A SysInfoDialog
96361>>>>>        End_Object
96362>>>>>
96362>>>>>        Object oBox Is A Container3d
96364>>>>>            Set Border_Style To Border_StaticEdge
96365>>>>>            Set Size to 63 202
96366>>>>>            Set Location To 4 5
96367>>>>>
96367>>>>>            Object oAboutGraphic Is A BitmapContainer
96369>>>>>                Set Border_Style To Border_None
96370>>>>>                Set Bitmap_Style To Bitmap_Center
96371>>>>>                Set Size To 48 48
96372>>>>>                Set Location To 7 2
96373>>>>>            End_Object
96374>>>>>
96374>>>>>            Object oProductName Is A TextBox
96376>>>>>                Set Label To C_$ProductName
96377>>>>>                Set Size To 10 45
96378>>>>>                Set Location To 8 53
96379>>>>>            End_Object
96380>>>>>
96380>>>>>            Object oVersion Is A TextBox
96382>>>>>                Set Label To C_$Version
96383>>>>>                Set Size To 10 25
96384>>>>>                Set Location To 21 53
96385>>>>>            End_Object
96386>>>>>
96386>>>>>            Object oCopyright Is A TextBox
96388>>>>>                Set Label To C_$Copyright
96389>>>>>                Set Size To 10 31
96390>>>>>                Set Location To 34 53
96391>>>>>            End_Object
96392>>>>>
96392>>>>>            Object oAuthor Is A TextBox
96394>>>>>                Set Label To C_$Author
96395>>>>>                Set Size To 10 22
96396>>>>>                Set Location To 46 53
96397>>>>>            End_Object
96398>>>>>        End_Object
96399>>>>>
96399>>>>>        Object oOKButton Is A Button
96401>>>>>            On_Item C_$OK Send Close_Panel
96402>>>>>            Set Size To 14 50
96403>>>>>            Set Location To 71 157
96404>>>>>        End_Object
96405>>>>>
96405>>>>>        Object oSysInfoButton Is A Button
96407>>>>>            On_Item C_$SystemInfo Send Show_Sysinfo
96408>>>>>            Set Size To 14 50
96409>>>>>            Set Location To 71 101
96410>>>>>        End_Object
96411>>>>>
96411>>>>>        On_Key Kcancel Send KeyAction Of oOKButton
96412>>>>>
96412>>>>>        Set Logo To "DacAbout.bmp"  // square bitmaps Of 42x42 work best
96413>>>>>    End_Procedure
96414>>>>>
96414>>>>>    Procedure Set ProductName String sProductName
96416>>>>>        Set Label Of oProductName To sProductName
96417>>>>>    End_Procedure
96418>>>>>
96418>>>>>    Procedure Set Version String sVersion
96420>>>>>        Set Label Of oVersion To sVersion
96421>>>>>    End_Procedure
96422>>>>>
96422>>>>>    Procedure Set Copyright string sCopyright
96424>>>>>        Set Label Of oCopyright To sCopyright
96425>>>>>    End_Procedure
96426>>>>>
96426>>>>>    Procedure Set Author String sAuthor
96428>>>>>        Set Label Of oAuthor To sAuthor
96429>>>>>    End_Procedure
96430>>>>>
96430>>>>>    Procedure Set Logo string sLogo
96432>>>>>        // square bitmaps Of 42x42 work best
96432>>>>>        Set Bitmap Of oAboutGraphic To sLogo
96433>>>>>    End_Procedure
96434>>>>>
96434>>>>>    Procedure Show_Sysinfo
96436>>>>>        Send Popup_Modal Of oSysinfoDialog
96437>>>>>    End_Procedure
96438>>>>>
96438>>>>>    Procedure End_Construct_Object
96440>>>>>        Handle hoVersionInfo
96440>>>>>        Boolean bIncluded
96440>>>>>        Integer iMajor iMinor iRelease iBuild
96440>>>>>        String sLabel
96440>>>>>
96440>>>>>        Get Label Of oVersion To sLabel
96441>>>>>        If (sLabel = C_$VERSION) Begin
96443>>>>>            // set it To the version info Of the program, if available
96443>>>>>            If (ghoApplication <> 0) Begin
96445>>>>>                Get phoVersionInfo of ghoApplication to hoVersionInfo
96446>>>>>                If (hoVersionInfo <> 0) Begin
96448>>>>>                    Get pbIncluded of hoVersionInfo to bIncluded
96449>>>>>                    If (bIncluded) Begin
96451>>>>>                        Get piVersionMajor of hoVersionInfo to iMajor
96452>>>>>                        Get piVersionMinor of hoVersionInfo to iMinor
96453>>>>>                        Get piVersionRelease of hoVersionInfo to iRelease
96454>>>>>                        Get piVersionBuild of hoVersionInfo to iBuild
96455>>>>>                        Move (SFormat (C_$VERSION + ": %1.%2.%3.%4", iMajor, iMinor, iRelease, iBuild)) to sLabel
96456>>>>>                        Set Version to sLabel
96457>>>>>                    End
96457>>>>>>
96457>>>>>                End
96457>>>>>>
96457>>>>>            End
96457>>>>>>
96457>>>>>        End
96457>>>>>>
96457>>>>>
96457>>>>>        Forward Send End_Construct_Object
96459>>>>>    End_Procedure
96460>>>>>End_Class
96461>>>
96461>>>// *************************************************************************
96461>>>//  Public message. This is the default message. It is expected that you will
96461>>>//   create your own message to override this
96461>>>// *************************************************************************
96461>>>
96461>>>Procedure Activate_About
96464>>>   Send DoAbout "" "" "" "" ""
96465>>>End_Procedure
96466>>>
96466>>>// *************************************************************************
96466>>>//  Public message. It is expected that you will send this message (most
96466>>>//  likely from Activate_About. This creates an about object, activates it
96466>>>//  and destroys it when done. It is not exepected that you will augment this.
96466>>>// *************************************************************************
96466>>>
96466>>>Procedure DoAbout string sTitle string sVersion string sCopyRight string sAuthor string sBitmap
96469>>>        integer hoObj hoMain
96469>>>
96469>>>        // create object
96469>>>        Object About is an AboutDialog
96471>>>            // if no title passed use the label of the main panel
96471>>>            // (if a main panel exists).
96471>>>            if sTitle     eq '' Begin
96473>>>                Get Main_Window of desktop to hoMain
96474>>>                if hoMain Get Label of hoMain to sTitle
96477>>>            end
96477>>>>
96477>>>            set productname to sTitle
96478>>>            set version     to sVersion
96479>>>            set copyright   to sCopyRight
96480>>>            set author      to sAuthor
96481>>>            If sBitmap    ne '' ;               set logo to sBitMap // square bitmaps of 42x42 work best
96484>>>            Move self to hoObj // object Id
96485>>>        End_Object
96486>>>        Send Popup   of hoObj    // popup the about object
96487>>>        Send Destroy of hoObj // when done, it will be destroyed
96488>>>End_procedure
96489>        Use oTEST_VDFD_CE.vw
Including file: oTEST_VDFD_CE.vw    (F:\GitHub\vdfd-framework-community\AppSrc\oTEST_VDFD_CE.vw)
96489>>>
96489>>>Use Base\cVDFD_CE_Button.pkg
96489>>>
96489>>>Use cVDFD_CE_CallStackDump.pkg
Including file: cVDFD_CE_CallStackDump.pkg    (F:\GitHub\vdfd-framework-community\AppSrc\cVDFD_CE_CallStackDump.pkg)
96489>>>>>Use Base\cVDFD_CE_Object.pkg
96489>>>>>
96489>>>>>//---------------------------
96489>>>>>//Call Stack Dump
96489>>>>>//---------------------------
96489>>>>>//GET_PSCALLSTACK (12678) - oVDFD_CE_CALLSTACKDUMP (249) - at Address 96498
96489>>>>>//GET_TESTIT (12680)      - OCLIENTAREA (239)            - at Address 96509
96489>>>>>//GET_TESTIT (12680)      - OTEST_VDFD_CE_VW (241)       - in native code
96489>>>>>//GET_TESTIT (12680)      - ONEWTABDIALOG (243)          - in native code
96489>>>>>//GET_TESTIT (12680)      - OCALLSTACKDUMP_TP (244)      - in native code
96489>>>>>//MSG_ONCLICK (4600)      - OVDFD_CE_BUTTON1 (245)       - at Address 96544
96489>>>>>//MSG_COMMAND (648)       - OVDFD_CE_BUTTON1 (245)       - in native code
96489>>>>>//[start]                 - at Address 96571
96489>>>>>//
96489>>>>>//---------------------------
96489>>>>>//OK   
96489>>>>>//---------------------------
96489>>>>>
96489>>>>>
96489>>>>>Struct tVDFD_CE_CallStackDump
96489>>>>>    String sFullLine
96489>>>>>    String sMethod
96489>>>>>    Handle hmId
96489>>>>>    String sObject
96489>>>>>    Handle hoId
96489>>>>>    String sAddress
96489>>>>>End_Struct
96489>>>>>
96489>>>>>Use X\cVDFD_Parser.pkg
Including file: X\cVDFD_Parser.pkg    (F:\GitHub\vdfd-framework-community\AppSrc\X\cVDFD_Parser.pkg)
96489>>>>>>>//TH-Header
96489>>>>>>>//*****************************************************************************************
96489>>>>>>>// Copyright (c)  @DY@ Todd Forsberg d/b/a Threshold Software
96489>>>>>>>// All rights reserved.
96489>>>>>>>//
96489>>>>>>>// $FileName    : @FILENAME@
96489>>>>>>>// $ProjectName : @PROJECTNAME@
96489>>>>>>>// $Authors     : 
96489>>>>>>>// $Created     : @DD@.@DM@.@DY@  @TH@:@TM@
96489>>>>>>>//
96489>>>>>>>// Contents:
96489>>>>>>>//
96489>>>>>>>//*****************************************************************************************
96489>>>>>>>//TH-RevisionStart
96489>>>>>>>// __________ _____  ______________________________________________________ by ____________ 
96489>>>>>>>// @DD@.@DM@.@DY@ @TH@:@TM@ @DESCRIPTION@ @USERNAME@
96489>>>>>>>//TH-RevisionEnd
96489>>>>>>>
96489>>>>>>>
96489>>>>>>>
96489>>>>>>>// Class: cVDFD_Parser.pkg
96489>>>>>>>
96489>>>>>>>Class cVDFD_Parser Is a DFObject
96490>>>>>>>
96490>>>>>>>  //========================================================================//
96490>>>>>>>
96490>>>>>>>  Function ParamNum String sDelim  String sFullStr  Returns Integer
96492>>>>>>>    Integer iCount
96492>>>>>>>    Move 0 To iCount
96493>>>>>>>    Repeat
96493>>>>>>>>
96493>>>>>>>      Replace sDelim In sFullstr with ''
96495>>>>>>>      [found] Increment iCount
96496>>>>>>>    [found] Loop
96497>>>>>>>>
96497>>>>>>>    Function_Return (iCount + 1)
96498>>>>>>>  End_Function
96499>>>>>>>
96499>>>>>>>  //========================================================================//
96499>>>>>>>
96499>>>>>>>  Function ParamStr String sDelim String sFullStr Integer iGrab Returns String
96501>>>>>>>    Integer iNum
96501>>>>>>>    String   sMyStr
96501>>>>>>>    Integer  iCount iPlace iLong iKeep
96501>>>>>>>  
96501>>>>>>>    Move (ParamNum(Self, sDelim, sFullStr)) to iNum
96502>>>>>>>    Move 0 To iCount
96503>>>>>>>  
96503>>>>>>>    Repeat
96503>>>>>>>>
96503>>>>>>>      Increment iCount
96504>>>>>>>      If (iCount <> iGrab) Begin
96506>>>>>>>        Length sFullStr To iLong
96507>>>>>>>>
96507>>>>>>>        Pos sDelim In sFullStr To iPlace
96509>>>>>>>>
96509>>>>>>>        Calculate (iLong - iPlace) To iKeep
96510>>>>>>>>
96510>>>>>>>        Right sFullStr To sFullStr iKeep
96512>>>>>>>>
96512>>>>>>>      End
96512>>>>>>>>
96512>>>>>>>    Until (iCount = iGrab)
96514>>>>>>>    Pos sDelim In sFullStr To iPlace
96516>>>>>>>>
96516>>>>>>>    [    found] Left sFullStr To sMyStr  (iPlace - 1)
96518>>>>>>>>
96518>>>>>>>    [Not found] Move sFullStr To sMyStr
96519>>>>>>>    If iCount Gt iNum Move '' To sMyStr
96522>>>>>>>    Function_Return sMyStr
96523>>>>>>>  End_Function        // ParamStr
96524>>>>>>>
96524>>>>>>>  //=====================================================================//
96524>>>>>>>
96524>>>>>>>End_Class
96525>>>>>>>
96525>>>>>>>
96525>>>>>>>
96525>>>>>
96525>>>>>Class cVDFD_CE_CallStackDump is a cVDFD_CE_Object
96526>>>>>    
96526>>>>>    Procedure Construct_Object
96528>>>>>        Forward Send Construct_Object
96530>>>>>        Send AddClassName "!$"  //add classname        
96531>>>>>        Property tVDFD_CE_CallStackDump[] ptData
96532>>>>>    End_Procedure
96533>>>>>    
96533>>>>>    Function psCallStack Returns String
96535>>>>>        String sVal
96535>>>>>        CallStackDump sVal
96536>>>>>        Function_Return sVal
96537>>>>>    End_Function
96538>>>>>    
96538>>>>>    Function piId String sVal Returns Handle
96540>>>>>        Integer iP1 iP2
96540>>>>>        Integer hID
96540>>>>>        Move (Pos("(", sVal, 0)) to iP1
96541>>>>>        Move (Pos(")", sVal, 0)) to iP2                
96542>>>>>        
96542>>>>>        Move (Mid(sVal, iP2-iP1-1, iP1+1)) to hID
96543>>>>>        Function_Return hID
96544>>>>>    End_Function
96545>>>>>    
96545>>>>>    Procedure BuildArray String sCallStack
96547>>>>>        Handle hObj
96547>>>>>        String sCR sLF sLine sTemp
96547>>>>>        Integer iLines iLoop iNum 
96547>>>>>        tVDFD_CE_CallStackDump[] Data
96547>>>>>        tVDFD_CE_CallStackDump[] Data
96548>>>>>        
96548>>>>>        //Get ptData to Data
96548>>>>>        Move (Character(13)) to sCR
96549>>>>>        Move (Character(10)) to sLF
96550>>>>>        Get Create (RefClass(cVDFD_Parser)) to hObj
96551>>>>>        Get ParamNum of hObj sCR sCallStack to iLines
96552>>>>>        
96552>>>>>        For iLoop from 0 to (iLines-2)
96558>>>>>>
96558>>>>>            
96558>>>>>            Get ParamStr of hObj sCR sCallStack (iLoop+1) to sLine 
96559>>>>>            Move (Replace(sLF, sLine, "")) to sLine    
96560>>>>>            Move sLine to Data[iLoop].sFullLine
96561>>>>>            
96561>>>>>            Get ParamNum of hObj "-" sLine to iNum
96562>>>>>            
96562>>>>>            If (iNum=3) Begin
96564>>>>>                Get ParamStr of hObj "-" sLine 1 to sTemp
96565>>>>>                Move (Trim(sTemp))  to Data[iLoop].sMethod
96566>>>>>                Get piId sTemp      to Data[iLoop].hmId
96567>>>>>                
96567>>>>>                Get ParamStr of hObj "-" sLine 2 to sTemp
96568>>>>>                Move (Trim(sTemp)) to Data[iLoop].sObject
96569>>>>>                Get piId sTemp      to Data[iLoop].hoId
96570>>>>>                            
96570>>>>>                Get ParamStr of hObj "-" sLine 3 to sTemp
96571>>>>>                Move (Trim(sTemp)) to Data[iLoop].sAddress
96572>>>>>                
96572>>>>>            End
96572>>>>>>
96572>>>>>            Else Begin
96573>>>>>
96573>>>>>                Get ParamStr of hObj "-" sLine 2 to sTemp
96574>>>>>                Move (Trim(sTemp)) to Data[iLoop].sAddress
96575>>>>>                
96575>>>>>            End
96575>>>>>>
96575>>>>>            
96575>>>>>        Loop
96576>>>>>>
96576>>>>>        
96576>>>>>        Send Destroy of hObj
96577>>>>>        Set ptData to Data
96578>>>>>    End_Procedure
96579>>>>>    
96579>>>>>    Function FindCaller Handle hmId Handle hoId Returns Handle
96581>>>>>        tVDFD_CE_CallStackDump[] Data
96581>>>>>        tVDFD_CE_CallStackDump[] Data
96582>>>>>        Integer iItem iSize
96582>>>>>        
96582>>>>>        Get ptData to Data
96583>>>>>        Move (SizeOfArray(Data)) to iSize
96584>>>>>        
96584>>>>>        Repeat 
96584>>>>>>
96584>>>>>            Increment iItem
96585>>>>>        Until ((hmId = Data[iItem].hmId) and (hoId = Data[iItem].hoId))
96587>>>>>
96587>>>>>        Repeat 
96587>>>>>>
96587>>>>>            Increment iItem
96588>>>>>        Until (Data[iItem].sAddress <> "in native code")
96590>>>>>
96590>>>>>        Function_Return (Data[iItem].hoId)
96591>>>>>    End_Function
96592>>>>>    
96592>>>>>    Function phoCaller Handle hmId Handle hoId Returns Handle
96594>>>>>        String sVal
96594>>>>>        CallStackDump sVal
96595>>>>>        Send BuildArray sVal
96596>>>>>        Function_Return (FindCaller(Self, hmId, hoId))
96597>>>>>    End_Function
96598>>>>>    
96598>>>>>End_Class
96599>>>
96599>>>Function TestIt Returns String
96602>>>    String sVal
96602>>>    Handle hObj hCall
96602>>>    
96602>>>    Get Create (RefClass(cVDFD_CE_CallStackDump)) to hObj
96603>>>    Get psCallStack of hObj to sVal
96604>>>    Send Info_Box sVal "Call Stack Dump"
96605>>>    Get phoCaller of hObj (RefFunc(TestIt)) Self to hCall
96606>>>    Send Destroy of hObj
96607>>>    Send Info_Box (Name(hCall)) "Calling Object"
96608>>>End_Function
96609>>>
96609>>>Activate_View Activate_oTEST_VDFD_CE_vw for oTEST_VDFD_CE_vw
96619>>>>
96619>>>Object oTEST_VDFD_CE_vw is a dbView
96621>>>    
96621>>>    Set Label to "Test View"
96622>>>    Set Size to 111 250
96623>>>    Set Location to 5 7
96624>>>
96624>>>//    Function TestIt Returns String
96624>>>//        String sVal
96624>>>//        Forward Get TestIt to sVal
96624>>>//    End_Function
96624>>>    
96624>>>    Object oNewTabDialog is a cVDFD_CE_TabDialog
96626>>>        
96626>>>        Set Size to 100 240
96627>>>        Set Location to 5 5
96628>>>        Set Rotate_Mode to RM_Rotate
96629>>>
96629>>>        Object oCallStackDump_tp is a cVDFD_CE_TabPage
96631>>>            Set Label to "CallStackDump"
96632>>>
96632>>>            Object oVDFD_CE_Button1 is a cVDFD_CE_Button
96634>>>                Set Location to 14 26
96635>>>                Set Label to 'oVDFD_CE_Button1'
96636>>>            
96636>>>                // fires when the button is clicked
96636>>>                Procedure OnClick
96639>>>                    String sVal
96639>>>                    Delegate Get TestIt to sVal
96641>>>                End_Procedure
96642>>>            
96642>>>            End_Object
96643>>>
96643>>>            Object oVDFD_CE_Button2 is a cVDFD_CE_Button
96645>>>                Set Location to 12 139
96646>>>                Set Label to 'oVDFD_CE_Button2'
96647>>>            
96647>>>                // fires when the button is clicked
96647>>>                Procedure OnClick
96650>>>                    String sVal
96650>>>                    Get TestIt to sVal
96651>>>                End_Procedure
96652>>>            
96652>>>            End_Object
96653>>>
96653>>>        End_Object
96654>>>
96654>>>        Object oNewTabPage2 is a cVDFD_CE_DbTabPage
96656>>>            Set Label to "Page 2"
96657>>>        End_Object
96658>>>
96658>>>    End_Object
96659>>>
96659>>>End_Object
96660>>>
96660>
96660>        Procedure Activate_About
96663>            Send DoAbout "" "" "" "" ""
96664>        End_Procedure
96665>
96665>    End_Object
96666>
96666>End_Object
96667>
96667>Start_UI
96668>
Summary
Memory Available: 1561419776
Total Warnings : 0
Total Errors   : 0
Total Symbols  : 53813
Total Resources: 0
Total Commands : 96667
Total Windows  : 1
Total Pages    : 1
Static Data    : 516796
Message area   : 695067
Total Blocks   : 33970
